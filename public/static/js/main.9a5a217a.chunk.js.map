{"version":3,"sources":["Audio/Boop.m4a","Components/RecordView.js","Pages/SignUp.js","Pages/Login.js","Pages/CompanyHome.js","Components/CreateQuestion.js","Pages/CreateJob.js","Components/ConfirmDelete.js","Pages/ViewJob.js","Components/QuestionAnswer.js","Components/InterviewRulesPop.js","Pages/TakeInterview.js","Pages/ViewInterview.js","Pages/UserHome.js","Components/NavDrawer.js","Components/NavBar.js","Pages/ViewJobPostings.js","App.js","index.js"],"names":["RecordView","type","job","post","questions","setQuestions","setRecorded","recorded","hasRecorded","setHasRecorded","data","FormData","useState","duration","setDuration","url","setUrl","recording","setRecording","audio","Audio","Boop","testRef","useRef","liveRef","history","useHistory","useEffect","fetch","method","headers","body","JSON","stringify","link","job_id","id","then","res","json","console","log","push","video","onStop","blobURL","blob","append","getBlobDuration","dur","resp","catch","err","render","status","startRecording","stopRecording","mediaBlobUrl","previewStream","Button","color","variant","onClick","setTimeout","play","current","click","currentMedia","srcObject","getTracks","removeTrack","src","ref","style","display","autoPlay","width","controls","autoplay","Copyright","props","Typography","align","Link","href","Date","getFullYear","theme","createTheme","SignUp","setUser","isCompany","setIsCompany","password","setPassword","errors","setErrors","justifyContent","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","flexDirection","alignItems","Avatar","m","bgcolor","noValidate","onSubmit","event","preventDefault","currentTarget","form","name","get","email","is_company","r","ok","user","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","value","onChange","e","target","FormControlLabel","control","Checkbox","mb","position","bottom","left","transform","Stack","map","Alert","severity","Login","margin","CompanyHome","setJob","setInterview","jobs","setJobs","recentInterviews","setRecentInterviews","opacity","List","filter","user_id","ListItem","diablePadding","ListItemButton","ListItemIcon","ListItemText","primary","title","secondary","users","length","className","maxHeight","minWidth","minHeight","textAlign","postition","borderColor","marginRight","interview","steps","CreateQuestion","React","activeStep","setActiveStep","Set","skipped","setSkipped","jobTitle","setJobTitle","setPost","isStepOptional","step","isStepSkipped","has","gutterBottom","Input","placeholder","Stepper","index","stepProps","labelProps","optional","completed","Step","StepLabel","pt","flex","disabled","prevActiveStep","mr","Error","prevSkipped","newSkipped","values","add","delete","allow_multiple_attempts","CreateJob","ConfirmDelete","open","setOpen","startInterview","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","ViewJob","adding","params","setAdding","useParams","interviews","setInterviews","jobId","createdJob","q","Accordion","AccordionSummary","expandIcon","aria-controls","indexOf","AccordionDetails","marginLeft","Autocomplete","disableClearable","newValue","disablePortal","options","getOptionLabel","option","renderInput","QuestionAnswer","question","test","hide","setHide","startRef","interview_id","InterviewRulesPop","agree","setAgree","handleClose","TakeInterview","setJobId","questionNum","setQuestionNum","start","setStart","jobHeader","setJobHeader","found","setFound","alreadyTaken","setAlreadyTaken","ViewInterview","questionAnswer","setQuestionAnswer","interviewId","answers","i","UserHome","interviewCode","setInterviewCode","NavDrawer","state","toggleDrawer","setState","logoutFunc","list","anchor","role","onKeyDown","button","Drawer","NavBar","top","right","key","auth","anchorEl","setAnchorEl","flexGrow","FormGroup","AppBar","Toolbar","IconButton","size","edge","aria-label","cursor","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","ViewJobPostings","allJobs","setAllJobs","gridTemplateColumns","gridGap","Card","CardContent","fontSize","created_at","year","CardActions","App","videos","setVideos","darkTheme","palette","mode","action","disabledBackground","disabledColor","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9a5a217a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Boop.62d6be66.m4a\";","\nimport { useEffect, useState, useRef } from \"react\";\nimport { ReactMediaRecorder } from \"react-media-recorder\";\nimport getBlobDuration from 'get-blob-duration'\nimport {Button} from '@material-ui/core';\nimport {useHistory} from 'react-router-dom'\nimport Boop from '../Audio/Boop.m4a'\n\n\n\n\n//https://api.cloudinary.com/v1_1/abusel\n\n\n// /{fetch('/api/users', \n// {\n//   method: 'POST',\n//   headers: {\n//     'Accept': 'application/json',\n//     'Content-Type': 'application/json'\n//   },\n//   body:JSON.stringify({\n//     name: 'testofficial',\n//     video: blob\n//   })\n// }\n\n  \n// })\n\nconst VideoPreview = ({ stream }: { stream: MediaStream | null }) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (videoRef.current && stream) {\n      videoRef.current.srcObject = stream;\n    }\n  }, [stream]);\n  if (!stream) {\n    return null;\n  }\n  return <video ref={videoRef} width={500} height={500} autoPlay controls />;\n};\n\n\n\nfunction RecordView({type, job,  post, questions, setQuestions, recorded, setRecorded, hasRecorded, setHasRecorded}){\n  const data = new FormData()\n  const [duration, setDuration] = useState('')\n  const [url, setUrl] = useState('')\n  const [recording, setRecording] = useState(false)\n  let audio = new Audio(Boop);\n\n\n\n  const testRef = useRef()\n  const vidRef = useRef()\n  const liveRef = useRef()\n  let history = useHistory()\n\n\n  useEffect(()=>{\n      url && fetch('/api/questions', \n      {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body:JSON.stringify({\n          link: url,\n          duration: duration,\n          job_id: job.id\n        })\n      }).then(res => res.json()).then(data => {\n        type === 'q2' && setQuestions([...questions, data])\n        console.log(data)\n      }\n      ). then(()=> {\n        type === 'q1' && history.push(`/create/${job.id}`)\n      })\n  }, [post])\n    \n    return     (\n            <div>\n           \n              <ReactMediaRecorder\n              \n                video\n                audio={true}\n                onStop={(blobURL, blob)=> {\n                  data.append('file', blob)\n                  data.append(\"upload_preset\", \"test-video\")\n                  data.append(\"cloud_name\",\"abusel\")\n                  getBlobDuration(blob).then(function(dur) {\n                    setDuration(dur)\n                  });\n                  fetch(\" https://api.cloudinary.com/v1_1/abusel/video/upload\",{\n                  method:\"post\",\n                  body: data\n                  })\n                  .then(resp => resp.json())\n                  .then(data => {\n                  setUrl(data.url)\n                  })\n                  .catch(err => console.log(err))\n                  }\n                }\n                render={({ status, startRecording, stopRecording, mediaBlobUrl, previewStream }) => (\n                  \n                  <div>\n                   \n                    {status === 'recording' && <h2> Start talking now!</h2>}\n                    {!recording && <Button color=\"primary\" variant=\"outlined\" onClick={()=>{\n                      startRecording()\n                    \n                    setTimeout(() => {\n                        audio.play()\n                        \n                        \n                      }, 400);\n                      setTimeout(() => {\n                        liveRef.current.click()\n                        \n                        \n                      }, 2500);\n                      setRecording(true)\n                      }}>{hasRecorded ? 'New Attempt': 'Start Recording'}</Button>}\n                   { recording && <Button color=\"primary\" variant=\"outlined\" onClick={()=> {\n                      stopRecording()\n                      setRecording(false)\n                      setRecorded(true)\n                      let currentMedia = testRef.current.srcObject.getTracks()[0]\n                      testRef.current.srcObject.removeTrack(currentMedia)       \n                                     testRef.current.src = mediaBlobUrl\n\n\n                      setHasRecorded(true)\n                      }}>Stop Recording</Button>}\n                    <Button color=\"primary\" variant=\"outlined\" ref={liveRef} style={{display: 'none'}} onClick={()=> {\n\n                      if(testRef.current ){\n                        testRef.current.srcObject = previewStream\n                      } \n                      \n                      }}>play</Button>\n                    <div>\n                      {recording && <video ref={testRef}  autoPlay  width={800} />\n                       }\n                       {!recording && <video src={mediaBlobUrl ? mediaBlobUrl : url} controls autoplay  width={800}/>}\n                    </div>\n                    <div></div>\n                  </div>\n                )}\n              />\n            </div>\n          );\n}\nexport default RecordView","\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n//import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useHistory } from 'react-router-dom'\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp(\n  {setUser}\n) {\n  const [isCompany, setIsCompany] = useState(false)\n  const [password, setPassword] = useState('')\n  const [errors, setErrors] = useState([])\n\n   let history = useHistory()\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const form = JSON.stringify({\n      name: data.get('firstName') + ' ' + data.get('lastName'),\n      email: data.get('email'),\n      password: password,\n      is_company: isCompany\n    });\n    console.log(form)\n    fetch(\"/api/signup\", {\n      method: \"POST\",\n      headers: {\n          \"Content-Type\" : \"application/json\"\n      },\n      body: form\n    })\n    .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n             setUser(user)\n             history.push('/')\n          console.log(user)})\n        } else {\n          r.json().then((err) => setErrors(err.errors));\n        }\n      });\n  };\n\n  return (\n    <div style={{justifyContent: 'center'}}>\n    <ThemeProvider theme={theme} >\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            {/* <LockOutlinedIcon /> */}\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField variant='filled' sx={{ bgcolor: 'white'}} \n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField variant='filled' sx={{ bgcolor: 'white'}} \n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField variant='filled' sx={{ bgcolor: 'white'}} \n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField variant='filled' sx={{ bgcolor: 'white'}} \n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e)=> setPassword(e.target.value)}\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox value=\"isCompany\" id=\"isCompany\" color=\"primary\" onChange={()=> setIsCompany((isCompany)=> !isCompany)}/>}\n                  label=\"I am a company\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n\n      {\n        errors[0] && <div    style={{\n            position: \"absolute\",\n            bottom: \"10\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\"\n          }}> <Stack  sx={{ width: '20vw' }} spacing={2}>\n        {errors.map(err => {\n          return  <Alert severity=\"error\">{err}</Alert>\n        })}\n        </Stack>\n        </div>\n      }\n    </ThemeProvider>\n    </div>\n  );\n}","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useHistory } from 'react-router-dom'\nimport {useState} from 'react'\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\n\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function Login({setUser}) {\n    let history = useHistory()\n      const [errors, setErrors] = useState([])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const form = JSON.stringify({\n      email: data.get('email'),\n      password: data.get('password'),\n    });\n\n    fetch(\"/api/login\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\" : \"application/json\"\n        },\n        body: form\n      })\n      .then((r) => {\n          if (r.ok) {\n            r.json().then((user) => {setUser(user)\n            console.log(user)})\n            history.push('/')\n\n          } else {\n            r.json().then((err) => setErrors(err.errors));\n          }\n        });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            {/* <LockOutlinedIcon /> */}\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField variant='filled' sx={{ bgcolor: 'white'}} \n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField variant='filled' sx={{ bgcolor: 'white'}} \n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                {/* <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link> */}\n              </Grid>\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n\n       {\n        errors[0] && <div    style={{\n            position: \"absolute\",\n            bottom: \"10\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\"\n          }}> <Stack  sx={{ width: '20vw' }} spacing={2}>\n        {errors.map(err => {\n          return  <Alert severity=\"error\">{err}</Alert>\n        })}\n        </Stack>\n        </div>\n      }\n    </ThemeProvider>\n  );\n}","import {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button} from '@material-ui/core';\nimport {useHistory} from 'react-router-dom'\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport InboxIcon from '@mui/icons-material/Inbox';\nimport WorkIcon from '@mui/icons-material/Work';\nimport DraftsIcon from '@mui/icons-material/Drafts';\nimport AssignmentIndIcon from '@mui/icons-material/AssignmentInd';\n\n\nfunction CompanyHome({user,setJob, setInterview}){\n    const [jobs, setJobs] = useState([])\n    const [recentInterviews, setRecentInterviews] = useState([])\n    let history = useHistory()\n    console.log(jobs)\n\n\n    useEffect(() => {\n        if(user.is_company){\n          fetch(\"/api/jobs\").then(res => res.json()).then(data => setJobs(data))\n        }\n\n        fetch(`/api/recentinterviews/${user.id}`).then(r => r.json()).then(data => setRecentInterviews(data))\n      }, [user]);\n    return (\n        <>\n        <h2> Welcome {user.name}</h2>\n        <div style={{display: 'flex', justifyContent: 'space-evenly'}}>\n        \n            <div >\n                <h3>View Posted Jobs:</h3>\n\n                    {jobs[0] && \n                    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper', color: 'white', opacity: '0.8'}}>\n                <List >{jobs.filter(job => {\n                    return job.user_id === user.id\n                }).map(job => {\n                   return  <ListItem diablePadding onClick={()=> {\n                       setJob(job)\n                       history.push(`/${job.id}`)\n                   }}>\n                   <ListItemButton> \n                        <ListItemIcon> \n                            <WorkIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={job.title} secondary={job.users.length + ' Applicants'}/>\n                   </ListItemButton>\n                   </ListItem>\n                    })}</List>\n                      </Box>\n                    }\n\n\n\n\n                \n            </div>\n            <div style={{color: 'white'}} className='centerVertically' >\n\n                 <Button  style={{maxWidth: '200px', maxHeight: '100px', minWidth: '200px', minHeight: '100px', textAlign: 'center', postition: 'absolute', color: 'white', borderColor: '#CF9FFF'}} variant='outlined' onClick={()=> history.push(`/create`)}>Create a Job</Button>\n            </div>\n            <div style={{marginRight: '1vw'}}>\n                {recentInterviews[0] && <h3>View Most Recent Interviews:</h3>}\n\n                \n\n                    {recentInterviews[0] && \n                    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper', color: 'white'}}>\n                <List >{recentInterviews.map(interview => {\n                   return  <ListItem diablePadding onClick={()=> {\n                       setInterview(interview)\n                       history.push(`/interview/${interview.id}`)\n                   }}>\n                   <ListItemButton> \n                        <ListItemIcon> \n                            <AssignmentIndIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={interview.user.name} secondary={\"Interview for \" + interview.job.title}/>\n                   </ListItemButton>\n                   </ListItem>\n                    })}</List>\n                      </Box>\n                    }\n            </div>\n            \n        </div>\n        </>\n    )\n}\nexport default CompanyHome","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport { Button } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport RecordView from './RecordView';\nimport Input from '@mui/material/Input';\nimport { useHistory } from 'react-router-dom'\nimport TextField from '@mui/material/TextField'\n\n\n\nconst steps = ['Name the Job', '', 'Create First Question'];\n\nexport default function CreateQuestion({setJob, job, user}) {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [jobTitle, setJobTitle] = useState('')\n  const [post, setPost] = useState(false)\n  const [recorded, setRecorded] = useState(false)\n\n  let history = useHistory()\n\n\n    useEffect(()=>{\n\n    },[activeStep])\n\n    useEffect(()=>{\n      console.log(recorded)\n    }, [recorded])\n  function isDisabled(){\n    if (activeStep === 0 && !jobTitle){\n      return true\n    }\n    else if (activeStep === 2 && !recorded){\n      return true\n    }\n    else{\n      return false\n    }\n  }\n\n\n  const isStepOptional = (step) => {\n    return step === 10;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n    if (activeStep === steps.length -1){\n        console.log('finished')\n        fetch('/api/jobs',{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify({\n                title: jobTitle,\n                allow_multiple_attempts: false,\n                user_id: user.id\n            })\n          }).then(res => res.json()).then(data => \n            setJob(data)).then(()=>setPost(post => !post)).then(()=>\n          {\n            //history.push(`/create/${jobTitle}`)\n  \n\n          })\n    }\n  };\n\n  \n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <>\n    {activeStep === 0 && <div style={{textAlign: 'center', color: 'white'}}>\n        <Typography variant=\"h5\" gutterBottom component=\"div\">\n        Please name the job\n      </Typography>\n        <Input variant='filled' sx={{ bgcolor: 'white', color: 'black'}}  value={jobTitle} onChange={(e)=> setJobTitle(e.target.value)} placeholder='Job Title' autoFocus/>\n        </div>}\n\n\n        {activeStep === 1 && <div style={{color:'white'}}>\n          <Typography variant=\"h6\" gutterBottom component=\"div\">\n        Use the first question as an opportunity to introduce yourself and prompt the applicant to introduce themselves.\n        All questions will be videos as we believe that this form of question allows for a more \n      </Typography>\n        </div>\n        }\n\n\n\n    {activeStep > 1 && <RecordView type='q1' job={job} post={post} recorded={recorded} setRecorded={setRecorded}/>}\n    <Box sx={{ width: '90vw', position: 'Absolute', bottom: '10%', left: '5vw'  }}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = (\n              <Typography variant=\"caption\">Optional</Typography>\n            );\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {activeStep === steps.length ? (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Box sx={{ flex: '1 1 auto' }} />\n            <Button onClick={handleReset}>Reset</Button>\n          </Box>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Button\n              style={{color: 'white'}}\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              sx={{ mr: 1 }}\n            >\n              Back\n            </Button>\n            <Box sx={{ flex: '1 1 auto' }} />\n            {isStepOptional(activeStep) && (\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                Skip\n              </Button>\n            )}\n\n            <Button onClick={handleNext} style={{color: 'white'}} disabled={isDisabled()}>\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n            </Button>\n          </Box>\n        </React.Fragment>\n      )}\n    </Box>\n    </>\n  );\n}","import CreateQuestion from '../Components/CreateQuestion';\nimport {useState} from 'react'\n\nfunction CreateJob({user, job, setJob}){\n\n\n    return (\n        <div>\n            <h3>Create a new job</h3>\n            <h4>{job.title}</h4>\n            <CreateQuestion setJob={setJob} job={job} user={user}/>\n        </div>\n    )\n}\n\nexport default CreateJob","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {useState} from 'react'\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport {useHistory} from 'react-router-dom'\n\nfunction ConfirmDelete({open, setOpen, startInterview, job}){\n    const history = useHistory()\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n    return (\n        <div>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure you wish to delete this job?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            This will be permanent.  This job and all corresponding interviews will be deleted forever.\n          </DialogContentText>\n          \n        </DialogContent>\n        <DialogActions>\n\n\n    \n         <Button onClick={()=> {\n              setOpen(false)\n          }} >\n            Cancel\n          </Button>\n\n\n          <Button onClick={()=> {\n                fetch(`/api/jobs/${job.id}`,{\n                    method: 'DELETE'\n                }).then(() => history.push('/'))\n            }}>\n            Yes, Delete \n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n    )\n}\n\nexport default ConfirmDelete","import { Accordion, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport RecordView from \"../Components/RecordView\";\nimport {useHistory} from 'react-router-dom'\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ConfirmDelete from '../Components/ConfirmDelete'\n\n\nfunction ViewJob({job, setJob, adding, interview, setInterview, setAdding}){\n    const params = useParams();\n    const [log, setLog] = useState(false)\n    const [questions, setQuestions] = useState([])\n    const [post, setPost] = useState(false)\n    const [interviews, setInterviews] = useState([])\n    const [counter, setCounter] = useState(1)\n    const [selectedInterviewId, setSelectedInterviewId] = useState('')\n    const [open, setOpen] = useState(false)\n    const [recorded, setRecorded] = useState(false)\n    const [hasRecorded, setHasRecorded] = useState(false)\n\n\n    \n    \n    let history = useHistory()\n\n useEffect(()=>{\n     \n }, [])\n\n\n    useEffect(()=>{\n        let jobId = params.createdJob? params.createdJob : params.job\n\n        fetch(`/api/jobs/${jobId}`).then(r => r.json()).then(data => setJob(data))\n        \n    }, [])\n\n    useEffect(\n      () => {\n        !adding && fetch(`/api/interviewjob/${job.id}`).then(r => r.json()).then(data => setInterviews(data))\n      },\n      [job]\n    );\n\n    useEffect(()=>{\n        fetch(`/api/jobs/${job.id}`).then(r => r.json()).then(data => setQuestions(data.questions))\n    }, [job])\n  \n    return(\n        <div>\n            <ConfirmDelete open={open} setOpen={setOpen} job={job}/>\n            <h2>{job.title}</h2>\n            <h3>Interview Code: {job.id}</h3>\n            <h4> Link: http://localhost:4000/interview/{job.id}</h4>\n            {!adding && <Button onClick={()=>setOpen(true)}>Delete Job Posting\n                <DeleteIcon/>\n            </Button>}\n            {adding && <Button onClick={()=> history.push(`/${job.id}`)}> Publish Job</Button>}\n\n\n\n            <div style={{width: '80vw', textAlign: 'center'} } className='center' >  \n                <h3>View Questions:</h3>\n            {\n                questions && questions.map(q =>{\n                  \n                    return (\n                       \n                          <Accordion>\n                          <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                      >\n                        <Typography>Question {questions.indexOf(q) +1}</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <Typography>\n                        <div>\n                           <video src={q.link} controls autoplay  width={600}/>\n                        </div>\n                        </Typography>\n                      </AccordionDetails>\n                          </Accordion>\n\n\n                    )\n                })\n            }\n            </div>  \n            {!adding && <Button className='center' variant='outlined' style={ {marginLeft: '25vw'}} onClick={()=> {\n                adding = true\n                history.push(`/create/${job.id}`)\n                }}>Add More Questions</Button>}\n\n            {recorded && <Button onClick={()=>{\n               setPost(post => !post)\n               setRecorded(false)\n               setHasRecorded(false)\n               }}>Add Question</Button>}\n           { adding ? <><RecordView type='q2' questions={questions} setQuestions={setQuestions} post={post} job= {job} setRecorded={setRecorded} hasRecorded={hasRecorded} setHasRecorded={setHasRecorded}/>\n           \n            \n            </> : <>\n             \n                {interviews[0] && <h3>View Interviews:</h3>}\n                {/* {\n                    <ul>\n                        {\n                            interviews[0] && interviews.map(interview => {\n                                return  <li onClick={()=> {\n                                    // history.push(`/interview/${interview.id}`)\n                                    console.log(interview)\n                                    setInterview(interview)\n                                }}>{interview.user.name}</li>\n                            })\n                        }\n                    </ul>\n                    \n                } */}\n\n                {\n                     interviews[0] && <div style={{display: 'flex'}}> <Autocomplete\n                     disableClearable\n                     onChange={(e, newValue)=> {\n                            setInterview(newValue)\n                        }}\n                     disablePortal\n                     id=\"combo-box-demo\"\n                     options={interviews}\n                     getOptionLabel={(option) => option.user.name}\n                     sx={{ width: 300 }}\n                     renderInput={(params) => <TextField {...params} label=\"Applicant\" />}\n                   />\n                   <Button variant='outlined' onClick={()=> {\n                       interview && history.push(`/interview/${interview.id}`)\n                       }}>View Interview</Button>\n                   </div>\n                }\n            </>}\n            \n            \n        </div>\n    )\n}\n\nexport default ViewJob","import { ReactMediaRecorder } from \"react-media-recorder\";\nimport {useState, useEffect, useRef} from 'react'\nimport {Button} from '@material-ui/core';\nimport getBlobDuration from 'get-blob-duration'\nimport Boop from '../Audio/Boop.m4a'\n\n\nfunction QuestionAnswer({interview, question, test, hide, setHide, recording, setRecording, recorded, setRecorded}){\n    const data = new FormData()\n    const [duration, setDuration] = useState('')\n    const [url, setUrl] = useState('')\n    const startRef = useRef()\n    const testRef = useRef()\n    const liveRef = useRef()\n    const [post, setPost] = useState(false)\n    \n      let audio = new Audio(Boop);\n\n\n\n    useEffect(()=>{\n        url && fetch('/api/answers', \n        {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            link: url,\n            duration: duration,\n            interview_id: interview.id\n          })\n        }).then(res => res.json()).then(data => {\n          console.log(data)\n        }\n        \n        )\n  console.log(question)\n    \n    }, [post])\n\n    useEffect(()=>{\n        setTimeout(()=> {\n\n          if (startRef.current){\n              startRef.current.click()\n          }\n\n        }, (question.duration * 1000 + 200))\n    }, [test])\n\n    return (\n        <>\n\n \n\n        <ReactMediaRecorder\n              video\n              audio={true}\n           \n              onStop={(blobURL, blob)=> {\n                data.append('file', blob)\n                data.append(\"upload_preset\", \"test-video\")\n                data.append(\"cloud_name\",\"abusel\")\n                getBlobDuration(blob).then(function(dur) {\n                  setDuration(dur)\n                });\n                fetch(\" https://api.cloudinary.com/v1_1/abusel/video/upload\",{\n                method:\"post\",\n                body: data\n                })\n                .then(resp => resp.json())\n                .then(data => {\n                setUrl(data.url)\n                }).then(()=> setPost(post => !post))\n                .catch(err => console.log(err))\n                }\n              }\n              render={({ status, startRecording, stopRecording, mediaBlobUrl, previewStream }) => (\n                <div>\n                  <p>{status}</p>\n                  {status === 'recording' && <h2> Start talking now!</h2>}\n                  <p    ref={startRef}   onClick={()=>{\n                    startRecording()\n                    setHide(true)\n                    setTimeout(() => {\n                        audio.play()\n                        \n                        \n                      }, 400);\n                    setTimeout(() => {\n                        liveRef.current.click()\n                        \n                      }, 2500);\n                    setRecording(true)\n                    }}></p>\n                    <Button color=\"primary\" variant=\"outlined\" ref={liveRef} style={{display: 'none'}} onClick={()=> {\n\n                      testRef.current.srcObject = previewStream\n\n                      }}>play</Button>\n                  {recording && <Button color=\"primary\" variant=\"contained\" onClick={()=> {\n                    stopRecording()\n                    setRecording(false)\n                    setRecorded(true)}\n                    }>Stop Recording</Button>}\n                 { !hide && <video src={question.link} autoPlay></video>}\n                  {recording && <video ref={testRef} autoPlay  width={800} />}\n                 \n\n                  {/* <Button color=\"primary\" variant=\"contained\" onClick={()=> {\n                    // fetch('/api/users', \n                    // {\n                    //   method: 'POST',\n                    //   headers: {\n                    //     'Accept': 'application/json',\n                    //     'Content-Type': 'application/json'\n                    //   },\n                    //   body:JSON.stringify({\n                    //     name: 'testofficial',\n                    //     video: blob\n                    //   })\n                    // })\n\n                    // fetch('http://res.cloudinary.com/abusel/video/upload/v1641849510/imxmssfgxmdrh6y7c8fo.mkv')\n                    // .then(res=> res.)\n                    // console.log(mediaBlobUrl)\n                    }}>play</Button> */}\n                  <div>\n                  </div>\n                  <div></div>\n                </div>\n              )}\n            />\n        </>\n\n    )\n\n}\nexport default QuestionAnswer","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {useState} from 'react'\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nfunction InterviewRulesPop({open, setOpen, startInterview, questions}){\n    const [agree, setAgree] = useState(false)\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setAgree(false)\n  };\n    return (\n        <div>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Interview Rules\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            - Make sure your sound is on\n          </DialogContentText>\n          <DialogContentText id=\"alert-dialog-description\">\n            - After you start the interview, the first question will play and immediately after you will answer\n          </DialogContentText>\n          <DialogContentText id=\"alert-dialog-description\">\n            - There are no retakes on questions or for the interview, DO NOT exit the interview once you have started as you will not be able to retake it\n          </DialogContentText>\n            <DialogContentText id=\"alert-dialog-description\">\n            - After answering each question, click 'Stop Recording' followed by 'Next Question' when you are ready to move on to the next question\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n\n\n                <FormControlLabel control={<Checkbox   onChange={()=> setAgree(agree => !agree)}/>} label=\"I have read and agree to the rules\" />\n        \n\n          <Button disabled={!agree && true}onClick={()=> {\n              if (agree ){\n                  \n                  startInterview()\n                  }\n                if (agree && questions){\n                    handleClose()\n                }\n          }} autoFocus>\n            Start Interview\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    )\n}\n\nexport default InterviewRulesPop","import {useState, useEffect} from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { Button } from '@mui/material';\nimport QuestionAnswer from '../Components/QuestionAnswer';\nimport InterviewRulesPop from '../Components/InterviewRulesPop'\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\nimport {useHistory} from 'react-router-dom'\n\n\nfunction TakeInterview({user}){\n    const [jobId, setJobId] = useState('')\n    const [interview, setInterview] = useState('')\n    const [questions, setQuestions] = useState([])\n    const [questionNum, setQuestionNum] = useState(0)\n    const [hide, setHide] = useState(false)\n    const [start, setStart] = useState(0)\n    const [open, setOpen] = useState(false);\n    const [jobHeader, setJobHeader] = useState('')\n    const [found, setFound] = useState(true)\n    const [recording, setRecording] = useState(false)\n    const [alreadyTaken, setAlreadyTaken] = useState(false)\n    const [recorded, setRecorded] = useState(false)\n\n    \n    \n    let question = (questionNum) => questionNum < questions.length ? <QuestionAnswer interview={interview} question={questions[questionNum]} test={questionNum} hide={hide} setHide={setHide} recording={recording} setRecording={setRecording} recorded={recorded} setRecorded={setRecorded}/> : <div> \n                <h3>Nice Job! You are all finished.</h3>\n                <Button color=\"primary\" variant=\"contained\"  onClick={()=> {\n                    history.push('/')\n                }}> Back to Home</Button>\n            </div>\n     \n    const history = useHistory()\n\n\n    const params = useParams()\n\n\n\n    useEffect(()=>{\n        jobId &&  fetch(`/api/jobs/${jobId}`).then(res => res.json()).then(data => {\n            setJobHeader('Interview to be a ' + data.title + ' for ' + data.user.name)\n            setQuestions(data.questions)}).catch(()=> setFound(false))\n    }, [start, jobId])\n\n    useEffect(()=> {\n        jobId && console.log(jobId)\n    }, [jobId])\n    \n    function startInterview(){\n        setStart(start => start +1)\n\n        console.log({\n            jobId: jobId\n        }, questions)\n        questions && fetch('/api/interviews', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({\n                job_id: jobId,\n                user_id: user.id\n            })\n        }).then(r => {\n            if (r.ok){\n                return r.json()\n            }\n            else{\n                setAlreadyTaken(true)\n            }\n        }).then(data => setInterview(data))\n    }\n\n    useEffect(()=>{\n        console.log(recording)\n    }, [recording])\n\n    useEffect(\n      () => setJobId(params.jobId),\n      [jobId, params.jobId, setJobId]\n    );\n    useEffect(()=>{\n        fetch(`/api/jobs/${jobId}`).then(res => res.json()).then(data => setQuestions(data.questions))\n    }, [jobId, setJobId])\n    return (\n\n        <div style={{color: 'white'}}>\n            <h3>{jobHeader}</h3>\n    \n            \n            job_id: {jobId}\n\n           {found && questionNum === 0 &&  <Button sx={{bgcolor: 'white', color: 'black'}} onClick={()=> setOpen(true)}  >Start Interview</Button>}\n             {/* <Button  sx={{ bgcolor: 'white', color: 'black'}}  onClick={()=> {\n                setQuestionNum(questionNum => questionNum + 1)\n                setHide(false) \n                } }  >Next Question</Button> */}\n            {\n                interview && questions && question(questionNum)\n            }\n\n              {\n                interview && questions && questionNum !== questions.length && !recording && recorded && <Button  sx={{ bgcolor: 'white', color: 'black'}}  onClick={()=> {\n                setQuestionNum(questionNum => questionNum + 1)\n                setHide(false) \n                setRecorded(false)\n                } }  >Next Question</Button>\n            }\n\n            {!found && <div className='center'> \n                <h3>Oops, Looks like we couldn't find that interview.  Please check the interview code you entered.</h3>\n                <Button className='center' color=\"primary\" variant=\"contained\"  onClick={()=> {\n                    history.push('/')\n                }}> Back to Home</Button>\n            </div>}\n\n            {alreadyTaken && <div className='center'> \n                <h3>Oops, Looks like you have already taken took this interview.  We only allow one submission per interview.</h3>\n                <Button className='center' color=\"primary\" variant=\"contained\"  onClick={()=> {\n                    history.push('/')\n                }}> Back to Home</Button>\n            </div>}\n\n\n         \n            \n           \n                <InterviewRulesPop open={open} setOpen={setOpen} startInterview={startInterview} questions = {questions}/>\n        </div>\n    )\n}\n\nexport default TakeInterview","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport TextField from '@mui/material/TextField';\nimport { Button } from '@mui/material';\nimport { Accordion } from \"@mui/material\";\nimport {useHistory} from 'react-router-dom'\n\n\n\n\nfunction ViewInterview({interview, setInterview}){\n    const [job, setJob] = useState('')\n    const [questionAnswer, setQuestionAnswer] = useState([])\n    const params = useParams();\n    let history = useHistory()\n    //const [source, setSource] = useState('https://res.cloudinary.com/abusel/video/upload/v1642199731/hb0s5hwwsxzlzsrrtlab.mkv')\n\n\n\n\n\n    useEffect(()=>{\n        fetch(`/api/interviews/${params.interviewId}`).then(r => r.json()).then(data => setInterview(data))\n        // setTimeout(()=>{\n        //     setSource('https://res.cloudinary.com/abusel/video/upload/v1642207765/cyc14yiq9cg4zevqgkbn.mkv')\n        // }, 6000)\n        \n        \n    }, [])\n\n    // useEffect(()=>{\n    //     if (questionAnswer) { \n    //         let i = 0\n    //         while (i < questionAnswer.length){\n    //         // setSource(questionAnswer[i].link)\n    //         setInterval(()=>{\n    //             console.log(i)\n    //             i++\n    //         }, 2000)}\n    //     }\n      \n    // }, [questionAnswer])\n\n    \n\n\n\n    useEffect(()=>{\n        // fetch(`/api/interviews/${interview.id}`)\n        // .then(r => r.json())\n        // .then(data => {console.log(interview)\n        //     setJobId(data.job_id)\n\n        fetch(`/api/jobs/${interview.job_id}`).then(r => r.json()).then(data => setJob(data))\n    \n    },[interview])\n\n    useEffect(()=>{\n        setQuestionAnswer([])\n         if (job && interview.answers){\n            for (let i=0; i< interview.answers.length; i++){\n                setQuestionAnswer(questionAnswer => [...questionAnswer, job.questions[i]])\n                setQuestionAnswer(questionAnswer => [...questionAnswer, interview.answers[i]])\n         } \n        }\n    }, [job])\n\n\n\n\n\n    return(\n        <div >\n        {/* <video autoPlay src={source}></video> */}\n      { interview.user &&  <h2>{interview.user.name} interview for {job.title}</h2>}\n\n      {!interview.user && <div className='center'> \n                <h3>Oops, Looks like we couldn't find that interview.  Please navigate from the home page</h3>\n                <Button className='center' color=\"primary\" variant=\"contained\"  onClick={()=> {\n                    history.push('/')\n                }}> Back to Home</Button>\n            </div>}\n\n        <div>\n\n        </div>\n        <div style={{width: '90vw', textAlign: 'center'} } className='center' >\n            {/* <Button onClick={()=> console.log(questionAnswer)}>click me</Button> */}\n            {questionAnswer.map(video => {\n               if (questionAnswer.indexOf(video) % 2 === 0) {return (\n                // <div><video  controls src={video.link}></video></div>\n                <Accordion >\n                <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography>Question {(questionAnswer.indexOf(video)/2 +1)}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography>\n              <div>\n                 <video src={video.link} controls   width={600}/>\n                 <video src={questionAnswer[questionAnswer.indexOf(video) +1].link} controls width={600}/>\n              </div>\n              </Typography>\n            </AccordionDetails>\n                </Accordion>\n                )}\n            })}\n        </div>\n        </div>\n\n       \n    )\n}\nexport default ViewInterview ","import { Button } from '@mui/material';\nimport Input from '@mui/material/Input';\nimport {useState} from 'react'\nimport { useHistory } from 'react-router-dom'\n\n\nfunction UserHome({user}){\n    const [interviewCode, setInterviewCode] = useState('')\n    let history = useHistory()\n\n    return (\n        <div>\n           <p style={{color: 'white'}}>Welcome {user.name}!</p> \n           <h2 style={{color: 'white'}} className='center'> Please enter code below to go to an interview! </h2>\n           <div className='center'>\n           <Input  placeholder='Interview Code' value={interviewCode} onChange={(e)=> setInterviewCode(e.target.value)} variant='filled' sx={{ bgcolor: 'white', color: 'black'}} autoFocus/>\n            <Button   onClick={()=> {\n                history.push(`/interview/${interviewCode}`)\n            }} variant='filled' sx={{ bgcolor: '#CF9FFF', color: 'black'}} disabled={interviewCode ? false: true}>Let's go</Button>\n           </div>\n            \n        </div>\n    )\n}\nexport default UserHome","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AppsIcon from '@mui/icons-material/Apps';\nimport AddIcon from '@mui/icons-material/Add';\n\n\nfunction NavDrawer({state, setState, toggleDrawer, logoutFunc, user}){\n     let history = useHistory()\n    \n      const list = (anchor) => (\n        <Box\n          sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n          role=\"presentation\"\n          onClick={toggleDrawer(anchor, false)}\n          onKeyDown={toggleDrawer(anchor, false)}\n        >\n          <List>\n\n          <ListItem button key={'Log Out'} onClick={logoutFunc}>\n                <ListItemIcon>\n                  { <LogoutIcon />}\n                </ListItemIcon>\n                <ListItemText primary={'Log Out'} />\n              </ListItem>\n\n            \n            <ListItem button key={'Home'} onClick={()=> {\n                history.push('/')\n            }}>\n                <ListItemIcon>\n                  { <HomeIcon />}\n                </ListItemIcon>\n                <ListItemText primary={'Home'} />\n              </ListItem>\n\n\n              \n              {!user.is_company && <ListItem button key={'Job Postings'} onClick={()=> {\n                history.push('/jobpostings')\n            }}>\n                <ListItemIcon>\n                  { <AppsIcon />}\n                </ListItemIcon>\n                <ListItemText primary={'View Job Postings'} />\n              </ListItem>}\n\n\n              {user.is_company && <ListItem button key={'Create a Job'} onClick={()=> {\n                history.push('/create')\n            }}>\n                <ListItemIcon>\n                  { <AddIcon />}\n                </ListItemIcon>\n                <ListItemText primary={'Create a Job'} />\n              </ListItem>}\n\n              \n              \n              \n            {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))} */}\n          </List>\n        </Box>\n      );\n    \n    return(\n        <div>\n        {['left', 'right', 'top', 'bottom'].map((anchor) => (\n          <React.Fragment key={anchor}>\n            \n            <Drawer\n              anchor={anchor}\n              open={state[anchor]}\n              onClose={toggleDrawer(anchor, false)}\n            >\n              {list(anchor)}\n            </Drawer>\n          </React.Fragment>\n        ))}\n      </div>\n  \n    )\n}\n\nexport default NavDrawer","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport NavDrawer from './NavDrawer'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nfunction NavBar({logoutFunc, user}){\n\n    let history = useHistory()\n\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n      });\n    \n      const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n    \n        setState({ ...state, [anchor]: open });\n      };\n\n    const [auth, setAuth] = React.useState(true);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n  \n    const handleChange = (event) => {\n      setAuth(event.target.checked);\n    };\n  \n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    return (\n        <>\n        <NavDrawer state={state} setState={setState} toggleDrawer={toggleDrawer} logoutFunc={logoutFunc} user={user}></NavDrawer>\n        <Box sx={{ flexGrow: 1 }}>\n        <FormGroup>\n          \n        </FormGroup>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n            >\n              <MenuIcon onClick={toggleDrawer('left', true)}/>\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, cursor: 'pointer' }} onClick={()=> {\n                history.push('/')\n            }\n            }>\n              Interview Anywhere\n            </Typography>\n            {auth && (\n              <div>\n                \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\n                  <MenuItem onClick={handleClose}>My account</MenuItem>\n                </Menu>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      </>\n    )\n}\n\nexport default NavBar","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport {useState, useEffect} from 'react'\n\nfunction ViewJobPostings(){\n\n    const [allJobs, setAllJobs] = useState([])\n\n    useEffect(()=> {\n            fetch(\"/api/jobs\").then(res => res.json()).then(data => setAllJobs(data))\n    }, [])\n\n  \n    \n    return (\n        <div        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(5, 1fr)\",\n          gridGap: \"2rem\",\n          margin: \"auto\",\n          width: \"90%\",\n        }}>\n          \n      \n  \n         \n\n\n\n         {\n             allJobs[0] && allJobs.map(job => {\n                 return <Card variant=\"outlined\" style={{margin: '2rem'}}>{ <React.Fragment>\n    <CardContent>\n      <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n        Job Posting\n      </Typography>\n      <Typography variant=\"h5\" component=\"div\">\n        {job.title}\n      </Typography>\n      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n        For {job.user.name}\n      </Typography>\n      <Typography variant=\"body2\">\n        Contact info: \n        <br />\n        {job.user.email}\n      </Typography>\n        <Typography variant=\"body2\">\n        {new Date (job.created_at).year\n        }\n      </Typography>\n\n    </CardContent>\n    <CardActions>\n    </CardActions>\n  </React.Fragment>}</Card>\n             })\n         }\n     \n        </div>\n\n        \n    )\n}\n\nexport default ViewJobPostings","\nimport { useEffect, useState } from \"react\";\nimport RecordView from \"./Components/RecordView\";\nimport SignUp from \"./Pages/SignUp\";\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport Login from \"./Pages/Login\";\nimport {Button} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom'\nimport CompanyHome from \"./Pages/CompanyHome\";\nimport CreateJob from './Pages/CreateJob';\nimport ViewJob from \"./Pages/ViewJob\";\nimport TakeInterview from './Pages/TakeInterview'\nimport ViewInterview from \"./Pages/ViewInterview\";\nimport UserHome from \"./Pages/UserHome\";\nimport NavBar from \"./Components/NavBar\";\nimport ViewJobPostings from \"./Pages/ViewJobPostings\"\nimport { createTheme, Theme, ThemeProvider } from \"@mui/material/styles\"\n\n\nexport default function App() {\n  const [videos, setVideos] = useState([])\n  const [user, setUser] = useState('')\n  const [job, setJob] = useState('')\n  const [interview, setInterview] = useState('')\n  let history = useHistory()\n  const darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    action: {\n      disabledBackground: 'blue',\n      disabledColor: 'red',\n      },\n    },\n\n});\n\n\n\n\n  useEffect(() => {\n    fetch('/api/videos').then(res => res.json()).then(data => setVideos(data))\n    //auto-login\n    fetch('/api/me').then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n\n  }, []);\n\n  \n  function logoutFunc() {\n    fetch('/api/logout', { method: 'DELETE' })\n    .then((data) => console.log(data));\n    setUser('')\n    history.push('/')\n}\n\n  if (!user) \n    return (\n      <div className=\"app\">\n        <Switch>\n            <Route exact path='/'>\n                  \n            <SignUp user={user} setUser={setUser}/>\n            {user.name}\n            \n            </Route>\n            <Route exact path='/login'>\n              <Login setUser={setUser} ></Login>\n            </Route>\n        </Switch>\n      </div>\n    )\n\n  if (user.is_company) return (  \n    <Switch>\n      <Route exact path='/'>\n      <ThemeProvider theme={darkTheme}>\n        <div className=\"app\">\n          <NavBar logoutFunc={logoutFunc} user={user}/>\n        {user.name}\n        <CompanyHome user={user} setJob={setJob} setInterview={setInterview}/>\n        </div>\n        </ThemeProvider>\n      </Route>\n\n      <Route exact path='/create'>\n        <ThemeProvider theme={darkTheme}>\n        <NavBar logoutFunc={logoutFunc} user={user}/>\n\n        <CreateJob user={user} job={job} setJob={setJob}/>\n        </ThemeProvider>\n      </Route>\n\n      <Route exact path='/create/:createdJob'>\n      <ThemeProvider theme={darkTheme}>\n         <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewJob job={job} setJob={setJob} adding={true}/>\n        </ThemeProvider>\n      </Route>\n\n      <Route exact path='/:job'>\n        <ThemeProvider theme={darkTheme}>\n         <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewJob job={job} setJob={setJob} adding={false} interview={interview} setInterview={setInterview}/>\n        </ThemeProvider>\n      </Route>\n      \n      <Route exact path='/interview/:interviewId'>\n      <ThemeProvider theme={darkTheme}>\n       <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewInterview user={user} interview={interview} setInterview={setInterview}/>\n        </ThemeProvider>\n      </Route>\n    </Switch>\n \n\n    )\n  if (!user.is_company) return (\n    <Switch>\n      <Route exact path='/'>\n    \n        <ThemeProvider theme={darkTheme}>\n        <NavBar logoutFunc={logoutFunc} user={user}/>\n      <div className=\"app\">\n     \n\n      \n        <UserHome user={user}/>\n        \n  \n\n      \n      \n     {videos[0] && videos.map((video)=>{\n      return <div key={video.id}> <video  src={video.url} controls width={800} /> <p>{video.duration}</p></div>\n     })}\n    </div>\n    </ThemeProvider>\n      </Route>\n      \n      <Route exact path='/interview/:jobId'>\n      <ThemeProvider theme={darkTheme}>\n        <NavBar logoutFunc={logoutFunc} user={user}/>\n        <TakeInterview user={user}/>\n        </ThemeProvider>\n      </Route>\n\n      <Route exact path='/jobpostings'>\n      <ThemeProvider theme={darkTheme}>\n        <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewJobPostings/>\n        </ThemeProvider>\n      </Route>\n\n    </Switch>\n\n  )\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n<BrowserRouter>\n  <App />\n</BrowserRouter>,\n  \n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}