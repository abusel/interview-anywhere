{"version":3,"sources":["Components/RecordView.js","Pages/SignUp.js","Pages/Login.js","Pages/CompanyHome.js","Components/CreateQuestion.js","Pages/CreateJob.js","Pages/ViewJob.js","Components/QuestionAnswer.js","Pages/TakeInterview.js","Pages/ViewInterview.js","Pages/UserHome.js","Components/NavDrawer.js","Components/NavBar.js","App.js","index.js"],"names":["RecordView","type","job","post","questions","setQuestions","data","FormData","useState","duration","setDuration","url","setUrl","testRef","useRef","history","useHistory","useEffect","fetch","method","headers","body","JSON","stringify","link","job_id","id","then","res","json","console","log","push","title","video","audio","onStop","blobURL","blob","append","getBlobDuration","dur","resp","catch","err","render","status","startRecording","stopRecording","mediaBlobUrl","previewStream","Button","color","variant","onClick","current","play","ref","src","controls","autoplay","width","Copyright","props","Typography","align","Link","href","Date","getFullYear","theme","createTheme","SignUp","setUser","isCompany","setIsCompany","password","setPassword","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","noValidate","onSubmit","event","preventDefault","currentTarget","form","name","get","email","is_company","r","ok","user","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","value","onChange","e","target","FormControlLabel","control","Checkbox","mb","justifyContent","Login","margin","CompanyHome","setJob","jobs","setJobs","filter","user_id","map","to","steps","CreateQuestion","React","activeStep","setActiveStep","Set","skipped","setSkipped","jobTitle","setJobTitle","setPost","isStepOptional","step","isStepSkipped","has","Input","placeholder","Stepper","index","stepProps","labelProps","optional","completed","Step","StepLabel","length","pt","flex","disabled","prevActiveStep","mr","Error","prevSkipped","newSkipped","values","add","delete","allow_multiple_attempts","CreateJob","ViewJob","adding","interview","setInterview","params","useParams","interviews","setInterviews","q","Accordion","AccordionSummary","expandIcon","aria-controls","indexOf","AccordionDetails","Autocomplete","disableClearable","newValue","disablePortal","options","getOptionLabel","option","renderInput","QuestionAnswer","question","test","hide","setHide","interview_id","setTimeout","click","autoPlay","TakeInterview","jobId","setJobId","questionNum","setQuestionNum","ViewInterview","questionAnswer","setQuestionAnswer","interviewId","i","answers","UserHome","interviewCode","setInterviewCode","NavDrawer","state","toggleDrawer","setState","logoutFunc","list","anchor","role","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","Drawer","open","onClose","NavBar","top","left","bottom","right","key","auth","setAuth","anchorEl","setAnchorEl","handleClose","flexGrow","FormGroup","Switch","checked","aria-label","AppBar","position","Toolbar","IconButton","size","edge","cursor","aria-haspopup","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","App","videos","setVideos","exact","path","className","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.92e461fb.chunk.js","sourcesContent":["\nimport { useEffect, useState, useRef } from \"react\";\nimport { ReactMediaRecorder } from \"react-media-recorder\";\nimport getBlobDuration from 'get-blob-duration'\nimport {Button} from '@material-ui/core';\nimport {useHistory} from 'react-router-dom'\n\n\n\n//https://api.cloudinary.com/v1_1/abusel\n\n\n// /{fetch('/api/users', \n// {\n//   method: 'POST',\n//   headers: {\n//     'Accept': 'application/json',\n//     'Content-Type': 'application/json'\n//   },\n//   body:JSON.stringify({\n//     name: 'testofficial',\n//     video: blob\n//   })\n// }\n\n  \n// })\nfunction RecordView({type, job,  post, questions, setQuestions}){\n  const data = new FormData()\n  const [duration, setDuration] = useState('')\n  const [url, setUrl] = useState('')\n\n\n  const testRef = useRef()\n  let history = useHistory()\n\n\n  useEffect(()=>{\n      url && fetch('/api/questions', \n      {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body:JSON.stringify({\n          link: url,\n          duration: duration,\n          job_id: job.id\n        })\n      }).then(res => res.json()).then(data => {\n        type === 'q2' && setQuestions([...questions, data])\n        console.log(data)\n      }\n      ). then(()=> {\n        type === 'q1' && history.push(`/create/${job.title}`)\n      })\n  }, [post])\n    \n    return     (\n            <div>\n              <ReactMediaRecorder\n              \n                video\n                audio={true}\n                onStop={(blobURL, blob)=> {\n                  data.append('file', blob)\n                  data.append(\"upload_preset\", \"test-video\")\n                  data.append(\"cloud_name\",\"abusel\")\n                  getBlobDuration(blob).then(function(dur) {\n                    setDuration(dur)\n                  });\n                  fetch(\" https://api.cloudinary.com/v1_1/abusel/video/upload\",{\n                  method:\"post\",\n                  body: data\n                  })\n                  .then(resp => resp.json())\n                  .then(data => {\n                  setUrl(data.url)\n                  })\n                  .catch(err => console.log(err))\n                  }\n                }\n                render={({ status, startRecording, stopRecording, mediaBlobUrl, previewStream }) => (\n                  <div>\n                    {status === 'recording' && <h2> Start talking now!</h2>}\n                    <Button color=\"primary\" variant=\"contained\" onClick={()=>{\n                      startRecording()\n                      }}>Start Recording</Button>\n                    <Button color=\"primary\" variant=\"contained\" onClick={stopRecording}>Stop Recording</Button>\n                    <Button color=\"primary\" variant=\"contained\" onClick={()=> {\n                      // fetch('/api/users', \n                      // {\n                      //   method: 'POST',\n                      //   headers: {\n                      //     'Accept': 'application/json',\n                      //     'Content-Type': 'application/json'\n                      //   },\n                      //   body:JSON.stringify({\n                      //     name: 'testofficial',\n                      //     video: blob\n                      //   })\n                      // })\n\n                      // fetch('http://res.cloudinary.com/abusel/video/upload/v1641849510/imxmssfgxmdrh6y7c8fo.mkv')\n                      // .then(res=> res.)\n                      // console.log(mediaBlobUrl)\n                      testRef.current.play()\n                      }}>play</Button>\n                    <div>\n                      <video ref={testRef} src={mediaBlobUrl ? mediaBlobUrl : url} controls autoplay  width={800} />\n                    </div>\n                    <div></div>\n                  </div>\n                )}\n              />\n            </div>\n          );\n}\nexport default RecordView","\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n//import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useHistory } from 'react-router-dom'\n\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp(\n  {setUser}\n) {\n  const [isCompany, setIsCompany] = useState(false)\n  const [password, setPassword] = useState('')\n   let history = useHistory()\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const form = JSON.stringify({\n      name: data.get('firstName') + ' ' + data.get('lastName'),\n      email: data.get('email'),\n      password: password,\n      is_company: isCompany\n    });\n    console.log(form)\n    fetch(\"/api/signup\", {\n      method: \"POST\",\n      headers: {\n          \"Content-Type\" : \"application/json\"\n      },\n      body: form\n    })\n    .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n             setUser(user)\n             history.push('/')\n          console.log(user)})\n        } else {\n          r.json().then((err) => console.log(err));\n        }\n      });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            {/* <LockOutlinedIcon /> */}\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e)=> setPassword(e.target.value)}\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox value=\"isCompany\" id=\"isCompany\" color=\"primary\" onChange={()=> setIsCompany((isCompany)=> !isCompany)}/>}\n                  label=\"I am a company\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useHistory } from 'react-router-dom'\n\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function Login({setUser}) {\n    let history = useHistory()\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const form = JSON.stringify({\n      email: data.get('email'),\n      password: data.get('password'),\n    });\n\n    fetch(\"/api/login\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\" : \"application/json\"\n        },\n        body: form\n      })\n      .then((r) => {\n          if (r.ok) {\n            r.json().then((user) => {setUser(user)\n            console.log(user)})\n            history.push('/')\n\n          } else {\n            r.json().then((err) => console.log(err));\n          }\n        });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            {/* <LockOutlinedIcon /> */}\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}","import {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button} from '@material-ui/core';\nimport {useHistory} from 'react-router-dom'\n\n\nfunction CompanyHome({user,setJob}){\n    const [jobs, setJobs] = useState([])\n    let history = useHistory()\n\n\n    useEffect(() => {\n        if(user.is_company){\n          fetch(\"/api/jobs\").then(res => res.json()).then(data => setJobs(data))\n        }\n      }, [user]);\n    return (\n        <div>\n            <div>\n                <h3>View Posted Jobs</h3>\n                {jobs[0] && \n                <ul>{jobs.filter(job => {\n                    return job.user_id === user.id\n                }).map(job => {\n                   return  <li onClick={()=> {\n                       setJob(job)\n                       history.push(`/${job.id}`)\n                   }}>{job.title}</li>\n                    })}</ul>}\n\n\n                \n            </div>\n            <div>\n                or\n            </div>\n            <div>\n                <Link to='/create'>\n                 <Button>Create a Job</Button>\n                </Link>\n            </div>\n        </div>\n    )\n}\nexport default CompanyHome","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport RecordView from './RecordView';\nimport Input from '@mui/material/Input';\nimport { useHistory } from 'react-router-dom'\n\n\n\nconst steps = ['Name the Job', 'Create First Question', 'Finalize'];\n\nexport default function CreateQuestion({setJob, job, user}) {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [jobTitle, setJobTitle] = useState('')\n  const [post, setPost] = useState(false)\n\n  let history = useHistory()\n\n\n    useEffect(()=>{\n\n    },[activeStep])\n\n  const isStepOptional = (step) => {\n    return step === 10;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n    if (activeStep === steps.length -1){\n        console.log('finished')\n        fetch('/api/jobs',{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify({\n                title: jobTitle,\n                allow_multiple_attempts: false,\n                user_id: user.id\n            })\n          }).then(res => res.json()).then(data => \n            setJob(data)).then(()=>setPost(post => !post)).then(()=>\n          {\n            //history.push(`/create/${jobTitle}`)\n  \n\n          })\n    }\n  };\n\n  \n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <>\n    {activeStep === 0 && <div>\n        <p>Please Name the Job</p>\n        <Input value={jobTitle} onChange={(e)=> setJobTitle(e.target.value)} placeholder='Job Title'/>\n        </div>}\n    {activeStep > 0 && <RecordView type='q1' job={job} post={post} />}\n    <Box sx={{ width: '100%' }}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = (\n              <Typography variant=\"caption\">Optional</Typography>\n            );\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {activeStep === steps.length ? (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Box sx={{ flex: '1 1 auto' }} />\n            <Button onClick={handleReset}>Reset</Button>\n          </Box>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Button\n              color=\"inherit\"\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              sx={{ mr: 1 }}\n            >\n              Back\n            </Button>\n            <Box sx={{ flex: '1 1 auto' }} />\n            {isStepOptional(activeStep) && (\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                Skip\n              </Button>\n            )}\n\n            <Button onClick={handleNext}>\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n            </Button>\n          </Box>\n        </React.Fragment>\n      )}\n    </Box>\n    </>\n  );\n}","import CreateQuestion from '../Components/CreateQuestion';\nimport {useState} from 'react'\n\nfunction CreateJob({user, job, setJob}){\n\n\n    return (\n        <div>\n            <h3>Create a new job</h3>\n            <h4>{job.title}</h4>\n            <CreateQuestion setJob={setJob} job={job} user={user}/>\n        </div>\n    )\n}\n\nexport default CreateJob","import { Accordion, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport RecordView from \"../Components/RecordView\";\nimport {useHistory} from 'react-router-dom'\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\n\nfunction ViewJob({job, setJob, adding, interview, setInterview}){\n    const params = useParams();\n    const [log, setLog] = useState(false)\n    const [questions, setQuestions] = useState([])\n    const [post, setPost] = useState(false)\n    const [interviews, setInterviews] = useState([])\n    const [counter, setCounter] = useState(1)\n    const [selectedInterviewId, setSelectedInterviewId] = useState('')\n    let history = useHistory()\n\n \n\n\n    useEffect(()=>{\n        fetch(`/api/jobs/${params.job}`).then(r => r.json()).then(data => setJob(data))\n    }, [])\n\n    useEffect(\n      () => {\n        !adding && fetch(`/api/interviewjob/${job.id}`).then(r => r.json()).then(data => setInterviews(data))\n      },\n      [job]\n    );\n\n    useEffect(()=>{\n        fetch(`/api/jobs/${job.id}`).then(r => r.json()).then(data => setQuestions(data.questions))\n    }, [job])\n  \n    return(\n        <div>\n            {job.title}\n\n\n\n            <div>  \n                <h3>View Questions:</h3>\n            {\n                questions && questions.map(q =>{\n                  \n                    return (\n                       \n                          <Accordion>\n                          <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                      >\n                        <Typography>Question {questions.indexOf(q) +1}</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <Typography>\n                        <div>\n                           <video src={q.link} controls autoplay  width={600}/>\n                        </div>\n                        </Typography>\n                      </AccordionDetails>\n                          </Accordion>\n\n\n                    )\n                })\n            }\n            </div>  \n\n\n           { adding ? <><RecordView type='q2' questions={questions} setQuestions={setQuestions} post={post} job= {job} />\n            <Button onClick={()=>setPost(post => !post)}>Add Question</Button>\n            <Button onClick={()=> history.push(`/`)}> Publish</Button>\n            </> : <>\n                <h3> Link: http://localhost:4000/interview/{job.id}</h3>\n                <h3>Interview Code: {job.id}</h3>\n                <h5>View Interviews</h5>\n                {/* {\n                    <ul>\n                        {\n                            interviews[0] && interviews.map(interview => {\n                                return  <li onClick={()=> {\n                                    // history.push(`/interview/${interview.id}`)\n                                    console.log(interview)\n                                    setInterview(interview)\n                                }}>{interview.user.name}</li>\n                            })\n                        }\n                    </ul>\n                    \n                } */}\n\n                {\n                     interviews[0] && <div> <Autocomplete\n                     disableClearable\n                     onChange={(e, newValue)=> {\n                            setInterview(newValue)\n                        }}\n                     disablePortal\n                     id=\"combo-box-demo\"\n                     options={interviews}\n                     getOptionLabel={(option) => option.user.name}\n                     sx={{ width: 300 }}\n                     renderInput={(params) => <TextField {...params} label=\"Applicant\" />}\n                   />\n                   <Button onClick={()=> {\n                       interview && history.push(`/interview/${interview.id}`)\n                       }}>View Interview</Button>\n                   </div>\n                }\n            </>}\n            \n            \n        </div>\n    )\n}\n\nexport default ViewJob","import { ReactMediaRecorder } from \"react-media-recorder\";\nimport {useState, useEffect, useRef} from 'react'\nimport {Button} from '@material-ui/core';\nimport getBlobDuration from 'get-blob-duration'\n\n\nfunction QuestionAnswer({interview, question, test, hide, setHide}){\n    const data = new FormData()\n    const [duration, setDuration] = useState('')\n    const [url, setUrl] = useState('')\n    const testRef = useRef()\n    const [post, setPost] = useState(false)\n\n\n\n    useEffect(()=>{\n        url && fetch('/api/answers', \n        {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            link: url,\n            duration: duration,\n            interview_id: interview.id\n          })\n        }).then(res => res.json()).then(data => {\n          console.log(data)\n        }\n        \n        )\n\n    \n    }, [post])\n\n    useEffect(()=>{\n        setTimeout(()=> {\n            testRef.current.click()\n        }, (question.duration * 1000 + 200))\n    }, [test])\n\n    return (\n        <>\n\n \n\n        <ReactMediaRecorder\n              video\n              audio={true}\n           \n              onStop={(blobURL, blob)=> {\n                data.append('file', blob)\n                data.append(\"upload_preset\", \"test-video\")\n                data.append(\"cloud_name\",\"abusel\")\n                getBlobDuration(blob).then(function(dur) {\n                  setDuration(dur)\n                });\n                fetch(\" https://api.cloudinary.com/v1_1/abusel/video/upload\",{\n                method:\"post\",\n                body: data\n                })\n                .then(resp => resp.json())\n                .then(data => {\n                setUrl(data.url)\n                }).then(()=> setPost(post => !post))\n                .catch(err => console.log(err))\n                }\n              }\n              render={({ status, startRecording, stopRecording, mediaBlobUrl, previewStream }) => (\n                <div>\n                  <p>{status}</p>\n                  {status === 'recording' && <h2> Start talking now!</h2>}\n                  <p    ref={testRef}   onClick={()=>{\n                    startRecording()\n                    setHide(true)\n                    }}></p>\n                  <Button color=\"primary\" variant=\"contained\" onClick={stopRecording}>Stop Recording</Button>\n                 { !hide && <video src={question.link} autoPlay></video>}\n                  {/* <Button color=\"primary\" variant=\"contained\" onClick={()=> {\n                    // fetch('/api/users', \n                    // {\n                    //   method: 'POST',\n                    //   headers: {\n                    //     'Accept': 'application/json',\n                    //     'Content-Type': 'application/json'\n                    //   },\n                    //   body:JSON.stringify({\n                    //     name: 'testofficial',\n                    //     video: blob\n                    //   })\n                    // })\n\n                    // fetch('http://res.cloudinary.com/abusel/video/upload/v1641849510/imxmssfgxmdrh6y7c8fo.mkv')\n                    // .then(res=> res.)\n                    // console.log(mediaBlobUrl)\n                    }}>play</Button> */}\n                  <div>\n                  </div>\n                  <div></div>\n                </div>\n              )}\n            />\n        </>\n\n    )\n\n}\nexport default QuestionAnswer","import {useState, useEffect} from 'react'\nimport { useParams } from \"react-router-dom\";\nimport {Button} from '@material-ui/core';\nimport QuestionAnswer from '../Components/QuestionAnswer';\n\n\nfunction TakeInterview({user}){\n    const [jobId, setJobId] = useState('')\n    const [interview, setInterview] = useState('')\n    const [questions, setQuestions] = useState([])\n    const [questionNum, setQuestionNum] = useState(0)\n    const [hide, setHide] = useState(false)\n    let question = (questionNum) => questionNum < questions.length ? <QuestionAnswer interview={interview} question={questions[questionNum]} test={questionNum} hide={hide} setHide={setHide}/> : <div>Done!</div>\n\n\n\n    const params = useParams()\n\n\n\n    useEffect(()=>{\n     \n    }, [questionNum])\n    \n    function startInterview(){\n\n        console.log({\n            jobId: jobId\n        }, questions)\n        fetch('/api/interviews', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({\n                job_id: jobId,\n                user_id: user.id\n            })\n        }).then(r => {\n            if (r.ok){\n                return r.json()\n            }\n        }).then(data => setInterview(data))\n    }\n\n    useEffect(\n      () => setJobId(params.jobId),\n      [jobId, params.jobId, setJobId]\n    );\n    useEffect(()=>{\n        fetch(`/api/jobs/${jobId}`).then(res => res.json()).then(data => setQuestions(data.questions))\n    }, [jobId, setJobId])\n    return (\n        <div>\n            job_id: {jobId}\n            <Button onClick={startInterview}>Start Interview</Button>\n            {\n                interview && questions && question(questionNum)\n            }\n            \n            \n            <Button onClick={()=> {\n                setQuestionNum(questionNum => questionNum + 1)\n                setHide(false)\n                }}>Next Question</Button>\n        </div>\n    )\n}\n\nexport default TakeInterview","import { useEffect, useState } from \"react\"\nimport Button from '@mui/material/Button';\nimport { useParams } from \"react-router-dom\";\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport TextField from '@mui/material/TextField';\nimport { Accordion } from \"@mui/material\";\n\n\n\n\nfunction ViewInterview({interview, setInterview}){\n    const [job, setJob] = useState('')\n    const [questionAnswer, setQuestionAnswer] = useState([])\n    const params = useParams();\n    //const [source, setSource] = useState('https://res.cloudinary.com/abusel/video/upload/v1642199731/hb0s5hwwsxzlzsrrtlab.mkv')\n\n\n\n\n\n    useEffect(()=>{\n        fetch(`/api/interviews/${params.interviewId}`).then(r => r.json()).then(data => setInterview(data))\n        // setTimeout(()=>{\n        //     setSource('https://res.cloudinary.com/abusel/video/upload/v1642207765/cyc14yiq9cg4zevqgkbn.mkv')\n        // }, 6000)\n        \n        \n    }, [])\n\n    // useEffect(()=>{\n    //     if (questionAnswer) { \n    //         let i = 0\n    //         while (i < questionAnswer.length){\n    //         // setSource(questionAnswer[i].link)\n    //         setInterval(()=>{\n    //             console.log(i)\n    //             i++\n    //         }, 2000)}\n    //     }\n      \n    // }, [questionAnswer])\n\n    \n\n\n\n    useEffect(()=>{\n        // fetch(`/api/interviews/${interview.id}`)\n        // .then(r => r.json())\n        // .then(data => {console.log(interview)\n        //     setJobId(data.job_id)\n\n        fetch(`/api/jobs/${interview.job_id}`).then(r => r.json()).then(data => setJob(data))\n    \n    },[interview])\n\n    useEffect(()=>{\n        setQuestionAnswer([])\n         if (job && interview){\n            for (let i=0; i< interview.answers.length; i++){\n                setQuestionAnswer(questionAnswer => [...questionAnswer, job.questions[i]])\n                setQuestionAnswer(questionAnswer => [...questionAnswer, interview.answers[i]])\n         } \n        }\n    }, [job])\n\n\n\n\n\n    return(\n        <>\n        {/* <video autoPlay src={source}></video> */}\n      { interview &&  <h2>{interview.user.name} interview for {job.title}</h2>}\n\n        <div>\n\n        </div>\n        <div>\n            {/* <Button onClick={()=> console.log(questionAnswer)}>click me</Button> */}\n            {questionAnswer.map(video => {\n               if (questionAnswer.indexOf(video) % 2 === 0) {return (\n                // <div><video  controls src={video.link}></video></div>\n                <Accordion >\n                <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography>Question {(questionAnswer.indexOf(video)/2 +1)}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography>\n              <div>\n                 <video src={video.link} controls   width={600}/>\n                 <video src={questionAnswer[questionAnswer.indexOf(video) +1].link} controls width={600}/>\n              </div>\n              </Typography>\n            </AccordionDetails>\n                </Accordion>\n                )}\n            })}\n        </div>\n        </>\n\n       \n    )\n}\nexport default ViewInterview ","import { Button } from '@mui/material';\nimport Input from '@mui/material/Input';\nimport {useState} from 'react'\nimport { useHistory } from 'react-router-dom'\n\n\nfunction UserHome({user}){\n    const [interviewCode, setInterviewCode] = useState('')\n    let history = useHistory()\n\n    return (\n        <div>\n           <p>Welcome {user.name}!</p> \n           <p>Please enter code below to go to an interview! </p>\n           <div>\n           <Input placeholder='Interview Code' value={interviewCode} onChange={(e)=> setInterviewCode(e.target.value)}/>\n            <Button onClick={()=> {\n                history.push(`/interview/${interviewCode}`)\n            }}>Let's go</Button>\n           </div>\n            \n        </div>\n    )\n}\nexport default UserHome","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport HomeIcon from '@mui/icons-material/Home';\n\n\nfunction NavDrawer({state, setState, toggleDrawer, logoutFunc}){\n     let history = useHistory()\n    \n      const list = (anchor) => (\n        <Box\n          sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n          role=\"presentation\"\n          onClick={toggleDrawer(anchor, false)}\n          onKeyDown={toggleDrawer(anchor, false)}\n        >\n          <List>\n\n          <ListItem button key={'Log Out'} onClick={logoutFunc}>\n                <ListItemIcon>\n                  { <LogoutIcon />}\n                </ListItemIcon>\n                <ListItemText primary={'Log Out'} />\n              </ListItem>\n            <ListItem button key={'Home'} onClick={()=> {\n                history.push('/')\n            }}>\n                <ListItemIcon>\n                  { <HomeIcon />}\n                </ListItemIcon>\n                <ListItemText primary={'Home'} />\n              </ListItem>\n            {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))} */}\n          </List>\n        </Box>\n      );\n    \n    return(\n        <div>\n        {['left', 'right', 'top', 'bottom'].map((anchor) => (\n          <React.Fragment key={anchor}>\n            \n            <Drawer\n              anchor={anchor}\n              open={state[anchor]}\n              onClose={toggleDrawer(anchor, false)}\n            >\n              {list(anchor)}\n            </Drawer>\n          </React.Fragment>\n        ))}\n      </div>\n  \n    )\n}\n\nexport default NavDrawer","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport NavDrawer from './NavDrawer'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nfunction NavBar({logoutFunc, user}){\n\n    let history = useHistory()\n\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n      });\n    \n      const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n    \n        setState({ ...state, [anchor]: open });\n      };\n\n    const [auth, setAuth] = React.useState(true);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n  \n    const handleChange = (event) => {\n      setAuth(event.target.checked);\n    };\n  \n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    return (\n        <>\n        <NavDrawer state={state} setState={setState} toggleDrawer={toggleDrawer} logoutFunc={logoutFunc}></NavDrawer>\n        <Box sx={{ flexGrow: 1 }}>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={auth}\n                onChange={handleChange}\n                aria-label=\"login switch\"\n              />\n            }\n            label={auth ? 'Logout' : 'Login'}\n          />\n        </FormGroup>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n            >\n              <MenuIcon onClick={toggleDrawer('left', true)}/>\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, cursor: 'pointer' }} onClick={()=> {\n                history.push('/')\n            }\n            }>\n              Interview Anywhere\n            </Typography>\n            {auth && (\n              <div>\n                <IconButton\n                  size=\"large\"\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={handleMenu}\n                  color=\"inherit\"\n                >\n                  <AccountCircle />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\n                  <MenuItem onClick={handleClose}>My account</MenuItem>\n                </Menu>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      </>\n    )\n}\n\nexport default NavBar","\nimport { useEffect, useState } from \"react\";\nimport RecordView from \"./Components/RecordView\";\nimport SignUp from \"./Pages/SignUp\";\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport Login from \"./Pages/Login\";\nimport {Button} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom'\nimport CompanyHome from \"./Pages/CompanyHome\";\nimport CreateJob from './Pages/CreateJob';\nimport ViewJob from \"./Pages/ViewJob\";\nimport TakeInterview from './Pages/TakeInterview'\nimport ViewInterview from \"./Pages/ViewInterview\";\nimport UserHome from \"./Pages/UserHome\";\nimport NavBar from \"./Components/NavBar\";\n\n\nexport default function App() {\n  const [videos, setVideos] = useState([])\n  const [user, setUser] = useState('')\n  const [job, setJob] = useState('')\n  const [interview, setInterview] = useState('')\n  let history = useHistory()\n\n\n\n  useEffect(() => {\n    fetch('/api/videos').then(res => res.json()).then(data => setVideos(data))\n    //auto-login\n    fetch('/api/me').then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n\n  }, []);\n\n  \n  function logoutFunc() {\n    fetch('/api/logout', { method: 'DELETE' })\n    .then((data) => console.log(data));\n    setUser('')\n    history.push('/')\n}\n\n  if (!user) \n    return (\n      <div className=\"app\">\n        <Switch>\n            <Route exact path='/'>\n                  \n            <SignUp user={user} setUser={setUser}/>\n            {user.name}\n            \n            </Route>\n            <Route exact path='/login'>\n              <Login setUser={setUser} ></Login>\n            </Route>\n        </Switch>\n      </div>\n    )\n\n  if (user.is_company) return (  \n    <Switch>\n      <Route exact path='/'>\n        <div className=\"app\">\n          <NavBar logoutFunc={logoutFunc} user={user}/>\n        {user.name}\n        <CompanyHome user={user} setJob={setJob}/>\n        </div>\n      </Route>\n\n      <Route exact path='/create'>\n        <NavBar logoutFunc={logoutFunc} user={user}/>\n\n        <CreateJob user={user} job={job} setJob={setJob}/>\n      </Route>\n\n      <Route exact path='/create/:createdJob'>\n         <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewJob job={job} setJob={setJob} adding={true}/>\n      </Route>\n\n      <Route exact path='/:job'>\n         <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewJob job={job} setJob={setJob} adding={false} interview={interview} setInterview={setInterview}/>\n      </Route>\n      \n      <Route exact path='/interview/:interviewId'>\n       <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewInterview user={user} interview={interview} setInterview={setInterview}/>\n      </Route>\n    </Switch>\n \n\n    )\n  if (!user.is_company) return (\n    <Switch>\n      <Route exact path='/'>\n      <NavBar logoutFunc={logoutFunc} user={user}/>\n      <div className=\"app\">\n      <UserHome user={user}/>\n     {videos[0] && videos.map((video)=>{\n      return <div key={video.id}> <video  src={video.url} controls width={800} /> <p>{video.duration}</p></div>\n     })}\n    </div>\n      </Route>\n      <NavBar logoutFunc={logoutFunc} user={user}/>\n      <Route exact path='/interview/:jobId'>\n        <TakeInterview user={user}/>\n      </Route>\n\n    </Switch>\n\n  )\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n<BrowserRouter>\n  <App />\n</BrowserRouter>,\n  \n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}