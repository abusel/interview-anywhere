{"version":3,"sources":["Audio/Boop.m4a","Components/RecordView.js","Pages/SignUp.js","Pages/Login.js","Pages/CompanyHome.js","Components/CreateQuestion.js","Pages/CreateJob.js","Pages/ViewJob.js","Components/QuestionAnswer.js","Components/InterviewRulesPop.js","Pages/TakeInterview.js","Pages/ViewInterview.js","Pages/UserHome.js","Components/NavDrawer.js","Components/NavBar.js","Pages/ViewJobPostings.js","App.js","index.js"],"names":["RecordView","type","job","post","questions","setQuestions","data","FormData","useState","duration","setDuration","url","setUrl","hasRecorded","setHasRecorded","recording","setRecording","audio","Audio","Boop","testRef","useRef","liveRef","history","useHistory","useEffect","fetch","method","headers","body","JSON","stringify","link","job_id","id","then","res","json","console","log","push","video","onStop","blobURL","blob","append","getBlobDuration","dur","resp","catch","err","render","status","startRecording","stopRecording","mediaBlobUrl","previewStream","Button","color","variant","onClick","setTimeout","play","current","click","currentMedia","srcObject","getTracks","removeTrack","src","ref","style","display","autoPlay","width","controls","autoplay","Copyright","props","Typography","align","Link","href","Date","getFullYear","theme","createTheme","SignUp","setUser","isCompany","setIsCompany","password","setPassword","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","flexDirection","alignItems","Avatar","m","bgcolor","noValidate","onSubmit","event","preventDefault","currentTarget","form","name","get","email","is_company","r","ok","user","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","label","autoFocus","value","onChange","e","target","FormControlLabel","control","Checkbox","mb","justifyContent","Login","margin","CompanyHome","setJob","setInterview","jobs","setJobs","recentInterviews","setRecentInterviews","List","filter","user_id","map","ListItem","diablePadding","ListItemButton","ListItemIcon","ListItemText","primary","title","secondary","users","length","padding","interview","steps","CreateQuestion","React","activeStep","setActiveStep","Set","skipped","setSkipped","jobTitle","setJobTitle","setPost","isStepOptional","step","isStepSkipped","has","gutterBottom","Input","placeholder","Stepper","index","stepProps","labelProps","optional","completed","Step","StepLabel","pt","flex","disabled","prevActiveStep","mr","Error","prevSkipped","newSkipped","values","add","delete","allow_multiple_attempts","CreateJob","ViewJob","adding","params","setAdding","useParams","interviews","setInterviews","jobId","createdJob","q","Accordion","AccordionSummary","expandIcon","aria-controls","indexOf","AccordionDetails","Autocomplete","disableClearable","newValue","disablePortal","options","getOptionLabel","option","renderInput","QuestionAnswer","question","test","hide","setHide","startRef","interview_id","InterviewRulesPop","open","setOpen","startInterview","agree","setAgree","handleClose","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","TakeInterview","setJobId","questionNum","setQuestionNum","start","setStart","jobHeader","setJobHeader","ViewInterview","questionAnswer","setQuestionAnswer","interviewId","i","answers","UserHome","interviewCode","setInterviewCode","NavDrawer","state","toggleDrawer","setState","logoutFunc","list","anchor","role","onKeyDown","button","Drawer","NavBar","top","left","bottom","right","key","auth","anchorEl","setAnchorEl","flexGrow","FormGroup","AppBar","position","Toolbar","IconButton","size","edge","aria-label","cursor","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","MenuItem","ViewJobPostings","allJobs","setAllJobs","gridTemplateColumns","gridGap","Card","CardContent","fontSize","created_at","year","CardActions","App","videos","setVideos","darkTheme","palette","mode","exact","path","className","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6ba7631a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Boop.62d6be66.m4a\";","\nimport { useEffect, useState, useRef } from \"react\";\nimport { ReactMediaRecorder } from \"react-media-recorder\";\nimport getBlobDuration from 'get-blob-duration'\nimport {Button} from '@material-ui/core';\nimport {useHistory} from 'react-router-dom'\nimport Boop from '../Audio/Boop.m4a'\n\n\n\n\n//https://api.cloudinary.com/v1_1/abusel\n\n\n// /{fetch('/api/users', \n// {\n//   method: 'POST',\n//   headers: {\n//     'Accept': 'application/json',\n//     'Content-Type': 'application/json'\n//   },\n//   body:JSON.stringify({\n//     name: 'testofficial',\n//     video: blob\n//   })\n// }\n\n  \n// })\n\nconst VideoPreview = ({ stream }: { stream: MediaStream | null }) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  useEffect(() => {\n    if (videoRef.current && stream) {\n      videoRef.current.srcObject = stream;\n    }\n  }, [stream]);\n  if (!stream) {\n    return null;\n  }\n  return <video ref={videoRef} width={500} height={500} autoPlay controls />;\n};\n\n\n\nfunction RecordView({type, job,  post, questions, setQuestions}){\n  const data = new FormData()\n  const [duration, setDuration] = useState('')\n  const [url, setUrl] = useState('')\n  const [hasRecorded, setHasRecorded] = useState(false)\n  const [recording, setRecording] = useState(false)\n  let audio = new Audio(Boop);\n\n\n\n  const testRef = useRef()\n  const vidRef = useRef()\n  const liveRef = useRef()\n  let history = useHistory()\n\n\n  useEffect(()=>{\n      url && fetch('/api/questions', \n      {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body:JSON.stringify({\n          link: url,\n          duration: duration,\n          job_id: job.id\n        })\n      }).then(res => res.json()).then(data => {\n        type === 'q2' && setQuestions([...questions, data])\n        console.log(data)\n      }\n      ). then(()=> {\n        type === 'q1' && history.push(`/create/${job.id}`)\n      })\n  }, [post])\n    \n    return     (\n            <div>\n           \n              <ReactMediaRecorder\n              \n                video\n                audio={true}\n                onStop={(blobURL, blob)=> {\n                  data.append('file', blob)\n                  data.append(\"upload_preset\", \"test-video\")\n                  data.append(\"cloud_name\",\"abusel\")\n                  getBlobDuration(blob).then(function(dur) {\n                    setDuration(dur)\n                  });\n                  fetch(\" https://api.cloudinary.com/v1_1/abusel/video/upload\",{\n                  method:\"post\",\n                  body: data\n                  })\n                  .then(resp => resp.json())\n                  .then(data => {\n                  setUrl(data.url)\n                  })\n                  .catch(err => console.log(err))\n                  }\n                }\n                render={({ status, startRecording, stopRecording, mediaBlobUrl, previewStream }) => (\n                  \n                  <div>\n                   \n                    {status === 'recording' && <h2> Start talking now!</h2>}\n                    <Button color=\"primary\" variant=\"outlined\" onClick={()=>{\n                      startRecording()\n                    \n                    setTimeout(() => {\n                        audio.play()\n                        \n                        \n                      }, 400);\n                      setTimeout(() => {\n                        liveRef.current.click()\n                        \n                        \n                      }, 2500);\n                      setRecording(true)\n                      }}>{hasRecorded ? 'New Attempt': 'Start Recording'}</Button>\n                    <Button color=\"primary\" variant=\"outlined\" onClick={()=> {\n                      stopRecording()\n                      setRecording(false)\n                      let currentMedia = testRef.current.srcObject.getTracks()[0]\n                      testRef.current.srcObject.removeTrack(currentMedia)       \n                                     testRef.current.src = mediaBlobUrl\n\n\n                      setHasRecorded(true)\n                      }}>Stop Recording</Button>\n                    <Button color=\"primary\" variant=\"outlined\" ref={liveRef} style={{display: 'none'}} onClick={()=> {\n\n                      if(testRef.current ){\n                        testRef.current.srcObject = previewStream\n                      } \n                      \n                      }}>play</Button>\n                    <div>\n                      {recording && <video ref={testRef}  autoPlay  width={800} />\n                       }\n                       {!recording && <video src={mediaBlobUrl ? mediaBlobUrl : url} controls autoplay  width={800}/>}\n                    </div>\n                    <div></div>\n                  </div>\n                )}\n              />\n            </div>\n          );\n}\nexport default RecordView","\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n//import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useHistory } from 'react-router-dom'\n\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignUp(\n  {setUser}\n) {\n  const [isCompany, setIsCompany] = useState(false)\n  const [password, setPassword] = useState('')\n   let history = useHistory()\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const form = JSON.stringify({\n      name: data.get('firstName') + ' ' + data.get('lastName'),\n      email: data.get('email'),\n      password: password,\n      is_company: isCompany\n    });\n    console.log(form)\n    fetch(\"/api/signup\", {\n      method: \"POST\",\n      headers: {\n          \"Content-Type\" : \"application/json\"\n      },\n      body: form\n    })\n    .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => {\n             setUser(user)\n             history.push('/')\n          console.log(user)})\n        } else {\n          r.json().then((err) => console.log(err));\n        }\n      });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            {/* <LockOutlinedIcon /> */}\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={(e)=> setPassword(e.target.value)}\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox value=\"isCompany\" id=\"isCompany\" color=\"primary\" onChange={()=> setIsCompany((isCompany)=> !isCompany)}/>}\n                  label=\"I am a company\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useHistory } from 'react-router-dom'\n\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function Login({setUser}) {\n    let history = useHistory()\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const form = JSON.stringify({\n      email: data.get('email'),\n      password: data.get('password'),\n    });\n\n    fetch(\"/api/login\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\" : \"application/json\"\n        },\n        body: form\n      })\n      .then((r) => {\n          if (r.ok) {\n            r.json().then((user) => {setUser(user)\n            console.log(user)})\n            history.push('/')\n\n          } else {\n            r.json().then((err) => console.log(err));\n          }\n        });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            {/* <LockOutlinedIcon /> */}\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}","import {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button} from '@material-ui/core';\nimport {useHistory} from 'react-router-dom'\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Divider from '@mui/material/Divider';\nimport InboxIcon from '@mui/icons-material/Inbox';\nimport WorkIcon from '@mui/icons-material/Work';\nimport DraftsIcon from '@mui/icons-material/Drafts';\nimport AssignmentIndIcon from '@mui/icons-material/AssignmentInd';\n\n\nfunction CompanyHome({user,setJob, setInterview}){\n    const [jobs, setJobs] = useState([])\n    const [recentInterviews, setRecentInterviews] = useState([])\n    let history = useHistory()\n    console.log(jobs)\n\n\n    useEffect(() => {\n        if(user.is_company){\n          fetch(\"/api/jobs\").then(res => res.json()).then(data => setJobs(data))\n        }\n\n        fetch(`/api/recentinterviews/${user.id}`).then(r => r.json()).then(data => setRecentInterviews(data))\n      }, [user]);\n    return (\n        <>\n        <h2> Welcome {user.name}</h2>\n        <div style={{display: 'flex'}}>\n        \n            <div>\n                <h3>View Posted Jobs:</h3>\n\n                    {jobs[0] && \n                    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                <List >{jobs.filter(job => {\n                    return job.user_id === user.id\n                }).map(job => {\n                   return  <ListItem diablePadding onClick={()=> {\n                       setJob(job)\n                       history.push(`/${job.id}`)\n                   }}>\n                   <ListItemButton> \n                        <ListItemIcon> \n                            <WorkIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={job.title} secondary={job.users.length + ' Applicants'}/>\n                   </ListItemButton>\n                   </ListItem>\n                    })}</List>\n                      </Box>\n                    }\n\n\n\n\n                \n            </div>\n            <div style={{padding: '5rem'}}>\n\n                 <Button variant='outlined' onClick={()=> history.push(`/create`)}>Create a Job</Button>\n            </div>\n            <div>\n                {recentInterviews[0] && <h3>View Most Recent Interviews:</h3>}\n           \n                \n\n                    {recentInterviews[0] && \n                    <Box sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\n                <List >{recentInterviews.map(interview => {\n                   return  <ListItem diablePadding onClick={()=> {\n                       setInterview(interview)\n                       history.push(`/interview/${interview.id}`)\n                   }}>\n                   <ListItemButton> \n                        <ListItemIcon> \n                            <AssignmentIndIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary={interview.user.name} secondary={\"Interview for \" + interview.job.title}/>\n                   </ListItemButton>\n                   </ListItem>\n                    })}</List>\n                      </Box>\n                    }\n            </div>\n            \n        </div>\n        </>\n    )\n}\nexport default CompanyHome","import * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport RecordView from './RecordView';\nimport Input from '@mui/material/Input';\nimport { useHistory } from 'react-router-dom'\n\n\n\nconst steps = ['Name the Job', '', 'Create First Question'];\n\nexport default function CreateQuestion({setJob, job, user}) {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const [jobTitle, setJobTitle] = useState('')\n  const [post, setPost] = useState(false)\n\n  let history = useHistory()\n\n\n    useEffect(()=>{\n\n    },[activeStep])\n\n    useEffect(()=>{\n      setJob('f')\n    }, [])\n\n  const isStepOptional = (step) => {\n    return step === 10;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n    if (activeStep === steps.length -1){\n        console.log('finished')\n        fetch('/api/jobs',{\n            method: \"POST\",\n            headers: {\n                \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify({\n                title: jobTitle,\n                allow_multiple_attempts: false,\n                user_id: user.id\n            })\n          }).then(res => res.json()).then(data => \n            setJob(data)).then(()=>setPost(post => !post)).then(()=>\n          {\n            //history.push(`/create/${jobTitle}`)\n  \n\n          })\n    }\n  };\n\n  \n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <>\n    {activeStep === 0 && <div>\n        <Typography variant=\"h5\" gutterBottom component=\"div\">\n        Please name the job\n      </Typography>\n        <Input value={jobTitle} onChange={(e)=> setJobTitle(e.target.value)} placeholder='Job Title'/>\n        </div>}\n\n\n        {activeStep === 1 && <div>\n          <Typography variant=\"h6\" gutterBottom component=\"div\">\n        Use the first question as an opportunity to introduce yourself and prompt the applicant to introduce themselves\n      </Typography>\n        </div>\n        }\n\n\n\n    {activeStep > 1 && <RecordView type='q1' job={job} post={post} />}\n    <Box sx={{ width: '100%' }}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = (\n              <Typography variant=\"caption\">Optional</Typography>\n            );\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {activeStep === steps.length ? (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Box sx={{ flex: '1 1 auto' }} />\n            <Button onClick={handleReset}>Reset</Button>\n          </Box>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Button\n              color=\"inherit\"\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              sx={{ mr: 1 }}\n            >\n              Back\n            </Button>\n            <Box sx={{ flex: '1 1 auto' }} />\n            {isStepOptional(activeStep) && (\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                Skip\n              </Button>\n            )}\n\n            <Button onClick={handleNext}>\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n            </Button>\n          </Box>\n        </React.Fragment>\n      )}\n    </Box>\n    </>\n  );\n}","import CreateQuestion from '../Components/CreateQuestion';\nimport {useState} from 'react'\n\nfunction CreateJob({user, job, setJob}){\n\n\n    return (\n        <div>\n            <h3>Create a new job</h3>\n            <h4>{job.title}</h4>\n            <CreateQuestion setJob={setJob} job={job} user={user}/>\n        </div>\n    )\n}\n\nexport default CreateJob","import { Accordion, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport RecordView from \"../Components/RecordView\";\nimport {useHistory} from 'react-router-dom'\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\n\nfunction ViewJob({job, setJob, adding, interview, setInterview, setAdding}){\n    const params = useParams();\n    const [log, setLog] = useState(false)\n    const [questions, setQuestions] = useState([])\n    const [post, setPost] = useState(false)\n    const [interviews, setInterviews] = useState([])\n    const [counter, setCounter] = useState(1)\n    const [selectedInterviewId, setSelectedInterviewId] = useState('')\n    let history = useHistory()\n\n useEffect(()=>{\n     \n }, [])\n\n\n    useEffect(()=>{\n        let jobId = params.createdJob? params.createdJob : params.job\n\n        fetch(`/api/jobs/${jobId}`).then(r => r.json()).then(data => setJob(data))\n        \n    }, [])\n\n    useEffect(\n      () => {\n        !adding && fetch(`/api/interviewjob/${job.id}`).then(r => r.json()).then(data => setInterviews(data))\n      },\n      [job]\n    );\n\n    useEffect(()=>{\n        fetch(`/api/jobs/${job.id}`).then(r => r.json()).then(data => setQuestions(data.questions))\n    }, [job])\n  \n    return(\n        <div>\n            {job.title}\n\n\n\n            <div>  \n                <h3>View Questions:</h3>\n            {\n                questions && questions.map(q =>{\n                  \n                    return (\n                       \n                          <Accordion>\n                          <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                      >\n                        <Typography>Question {questions.indexOf(q) +1}</Typography>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        <Typography>\n                        <div>\n                           <video src={q.link} controls autoplay  width={600}/>\n                        </div>\n                        </Typography>\n                      </AccordionDetails>\n                          </Accordion>\n\n\n                    )\n                })\n            }\n            </div>  \n            {!adding && <Button variant='outlined' onClick={()=> {\n                adding = true\n                history.push(`/create/${job.id}`)\n                }}>Add More Questions</Button>}\n\n\n           { adding ? <><RecordView type='q2' questions={questions} setQuestions={setQuestions} post={post} job= {job} />\n            <Button onClick={()=>setPost(post => !post)}>Add Question</Button>\n            <Button onClick={()=> history.push(`/`)}> Publish</Button>\n            </> : <>\n                <h3> Link: http://localhost:4000/interview/{job.id}</h3>\n                <h3>Interview Code: {job.id}</h3>\n                <h5>View Interviews</h5>\n                {/* {\n                    <ul>\n                        {\n                            interviews[0] && interviews.map(interview => {\n                                return  <li onClick={()=> {\n                                    // history.push(`/interview/${interview.id}`)\n                                    console.log(interview)\n                                    setInterview(interview)\n                                }}>{interview.user.name}</li>\n                            })\n                        }\n                    </ul>\n                    \n                } */}\n\n                {\n                     interviews[0] && <div> <Autocomplete\n                     disableClearable\n                     onChange={(e, newValue)=> {\n                            setInterview(newValue)\n                        }}\n                     disablePortal\n                     id=\"combo-box-demo\"\n                     options={interviews}\n                     getOptionLabel={(option) => option.user.name}\n                     sx={{ width: 300 }}\n                     renderInput={(params) => <TextField {...params} label=\"Applicant\" />}\n                   />\n                   <Button variant='outlined' onClick={()=> {\n                       interview && history.push(`/interview/${interview.id}`)\n                       }}>View Interview</Button>\n                   </div>\n                }\n            </>}\n            \n            \n        </div>\n    )\n}\n\nexport default ViewJob","import { ReactMediaRecorder } from \"react-media-recorder\";\nimport {useState, useEffect, useRef} from 'react'\nimport {Button} from '@material-ui/core';\nimport getBlobDuration from 'get-blob-duration'\nimport Boop from '../Audio/Boop.m4a'\n\n\nfunction QuestionAnswer({interview, question, test, hide, setHide}){\n    const data = new FormData()\n    const [duration, setDuration] = useState('')\n    const [url, setUrl] = useState('')\n    const startRef = useRef()\n    const testRef = useRef()\n    const liveRef = useRef()\n    const [post, setPost] = useState(false)\n    const [recording, setRecording] = useState(false)\n      let audio = new Audio(Boop);\n\n\n\n    useEffect(()=>{\n        url && fetch('/api/answers', \n        {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body:JSON.stringify({\n            link: url,\n            duration: duration,\n            interview_id: interview.id\n          })\n        }).then(res => res.json()).then(data => {\n          console.log(data)\n        }\n        \n        )\n  console.log(question)\n    \n    }, [post])\n\n    useEffect(()=>{\n        setTimeout(()=> {\n            startRef.current.click()\n        }, (question.duration * 1000 + 200))\n    }, [test])\n\n    return (\n        <>\n\n \n\n        <ReactMediaRecorder\n              video\n              audio={true}\n           \n              onStop={(blobURL, blob)=> {\n                data.append('file', blob)\n                data.append(\"upload_preset\", \"test-video\")\n                data.append(\"cloud_name\",\"abusel\")\n                getBlobDuration(blob).then(function(dur) {\n                  setDuration(dur)\n                });\n                fetch(\" https://api.cloudinary.com/v1_1/abusel/video/upload\",{\n                method:\"post\",\n                body: data\n                })\n                .then(resp => resp.json())\n                .then(data => {\n                setUrl(data.url)\n                }).then(()=> setPost(post => !post))\n                .catch(err => console.log(err))\n                }\n              }\n              render={({ status, startRecording, stopRecording, mediaBlobUrl, previewStream }) => (\n                <div>\n                  <p>{status}</p>\n                  {status === 'recording' && <h2> Start talking now!</h2>}\n                  <p    ref={startRef}   onClick={()=>{\n                    startRecording()\n                    setHide(true)\n                    setTimeout(() => {\n                        audio.play()\n                        \n                        \n                      }, 400);\n                    setTimeout(() => {\n                        liveRef.current.click()\n                        \n                      }, 2500);\n                    setRecording(true)\n                    }}></p>\n                    <Button color=\"primary\" variant=\"outlined\" ref={liveRef} style={{display: 'none'}} onClick={()=> {\n\n                      testRef.current.srcObject = previewStream\n\n                      }}>play</Button>\n                  <Button color=\"primary\" variant=\"contained\" onClick={()=> {\n                    stopRecording()\n                    setRecording(false)}\n                    }>Stop Recording</Button>\n                 { !hide && <video src={question.link} autoPlay></video>}\n                  {recording && <video ref={testRef} autoPlay  width={800} />}\n                 \n\n                  {/* <Button color=\"primary\" variant=\"contained\" onClick={()=> {\n                    // fetch('/api/users', \n                    // {\n                    //   method: 'POST',\n                    //   headers: {\n                    //     'Accept': 'application/json',\n                    //     'Content-Type': 'application/json'\n                    //   },\n                    //   body:JSON.stringify({\n                    //     name: 'testofficial',\n                    //     video: blob\n                    //   })\n                    // })\n\n                    // fetch('http://res.cloudinary.com/abusel/video/upload/v1641849510/imxmssfgxmdrh6y7c8fo.mkv')\n                    // .then(res=> res.)\n                    // console.log(mediaBlobUrl)\n                    }}>play</Button> */}\n                  <div>\n                  </div>\n                  <div></div>\n                </div>\n              )}\n            />\n        </>\n\n    )\n\n}\nexport default QuestionAnswer","import Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {useState} from 'react'\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nfunction InterviewRulesPop({open, setOpen, startInterview, questions}){\n    const [agree, setAgree] = useState(false)\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setAgree(false)\n  };\n    return (\n        <div>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Interview Rules\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            - Make sure your sound is on\n          </DialogContentText>\n          <DialogContentText id=\"alert-dialog-description\">\n            - After you start the interview, the first question will play and immediately after you will answer\n          </DialogContentText>\n          <DialogContentText id=\"alert-dialog-description\">\n            - There are no retakes on questions or for the interview, DO NOT exit the interview once you have started as you will not be able to retake it\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n\n\n                <FormControlLabel control={<Checkbox   onChange={()=> setAgree(agree => !agree)}/>} label=\"I have read and agree to the rules\" />\n        \n\n          <Button onClick={()=> {\n              if (agree ){\n                  \n                  startInterview()\n                  }\n                if (agree && questions){\n                    handleClose()\n                }\n          }} autoFocus>\n            Start Interview\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    )\n}\n\nexport default InterviewRulesPop","import {useState, useEffect} from 'react'\nimport { useParams } from \"react-router-dom\";\nimport {Button} from '@material-ui/core';\nimport QuestionAnswer from '../Components/QuestionAnswer';\nimport InterviewRulesPop from '../Components/InterviewRulesPop'\n\n\nfunction TakeInterview({user}){\n    const [jobId, setJobId] = useState('')\n    const [interview, setInterview] = useState('')\n    const [questions, setQuestions] = useState([])\n    const [questionNum, setQuestionNum] = useState(0)\n    const [hide, setHide] = useState(false)\n    const [start, setStart] = useState(0)\n    const [open, setOpen] = useState(false);\n    const [jobHeader, setJobHeader] = useState('')\n    \n    let question = (questionNum) => questionNum < questions.length ? <QuestionAnswer interview={interview} question={questions[questionNum]} test={questionNum} hide={hide} setHide={setHide}/> : <div>Done!</div>\n\n\n\n    const params = useParams()\n\n\n\n    useEffect(()=>{\n        jobId &&  fetch(`/api/jobs/${jobId}`).then(res => res.json()).then(data => {\n            setJobHeader('Interview to be a ' + data.title + ' for ' + data.user.name)\n            setQuestions(data.questions)})\n    }, [start, jobId])\n\n    useEffect(()=> {\n        jobId && console.log(jobId)\n    }, [jobId])\n    \n    function startInterview(){\n        setStart(start => start +1)\n\n        console.log({\n            jobId: jobId\n        }, questions)\n        questions && fetch('/api/interviews', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n            body: JSON.stringify({\n                job_id: jobId,\n                user_id: user.id\n            })\n        }).then(r => {\n            if (r.ok){\n                return r.json()\n            }\n        }).then(data => setInterview(data))\n    }\n\n    useEffect(\n      () => setJobId(params.jobId),\n      [jobId, params.jobId, setJobId]\n    );\n    useEffect(()=>{\n        fetch(`/api/jobs/${jobId}`).then(res => res.json()).then(data => setQuestions(data.questions))\n    }, [jobId, setJobId])\n    return (\n        <div>\n            <h3>{jobHeader}</h3>\n            job_id: {jobId}\n            <Button onClick={()=> setOpen(true)}>Start Interview</Button>\n            {\n                interview && questions && question(questionNum)\n            }\n            \n            \n            <Button onClick={()=> {\n                setQuestionNum(questionNum => questionNum + 1)\n                setHide(false)\n                }}>Next Question</Button>\n                <InterviewRulesPop open={open} setOpen={setOpen} startInterview={startInterview} questions = {questions}/>\n        </div>\n    )\n}\n\nexport default TakeInterview","import { useEffect, useState } from \"react\"\nimport Button from '@mui/material/Button';\nimport { useParams } from \"react-router-dom\";\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport TextField from '@mui/material/TextField';\nimport { Accordion } from \"@mui/material\";\n\n\n\n\nfunction ViewInterview({interview, setInterview}){\n    const [job, setJob] = useState('')\n    const [questionAnswer, setQuestionAnswer] = useState([])\n    const params = useParams();\n    //const [source, setSource] = useState('https://res.cloudinary.com/abusel/video/upload/v1642199731/hb0s5hwwsxzlzsrrtlab.mkv')\n\n\n\n\n\n    useEffect(()=>{\n        fetch(`/api/interviews/${params.interviewId}`).then(r => r.json()).then(data => setInterview(data))\n        // setTimeout(()=>{\n        //     setSource('https://res.cloudinary.com/abusel/video/upload/v1642207765/cyc14yiq9cg4zevqgkbn.mkv')\n        // }, 6000)\n        \n        \n    }, [])\n\n    // useEffect(()=>{\n    //     if (questionAnswer) { \n    //         let i = 0\n    //         while (i < questionAnswer.length){\n    //         // setSource(questionAnswer[i].link)\n    //         setInterval(()=>{\n    //             console.log(i)\n    //             i++\n    //         }, 2000)}\n    //     }\n      \n    // }, [questionAnswer])\n\n    \n\n\n\n    useEffect(()=>{\n        // fetch(`/api/interviews/${interview.id}`)\n        // .then(r => r.json())\n        // .then(data => {console.log(interview)\n        //     setJobId(data.job_id)\n\n        fetch(`/api/jobs/${interview.job_id}`).then(r => r.json()).then(data => setJob(data))\n    \n    },[interview])\n\n    useEffect(()=>{\n        setQuestionAnswer([])\n         if (job && interview){\n            for (let i=0; i< interview.answers.length; i++){\n                setQuestionAnswer(questionAnswer => [...questionAnswer, job.questions[i]])\n                setQuestionAnswer(questionAnswer => [...questionAnswer, interview.answers[i]])\n         } \n        }\n    }, [job])\n\n\n\n\n\n    return(\n        <>\n        {/* <video autoPlay src={source}></video> */}\n      { interview &&  <h2>{interview.user.name} interview for {job.title}</h2>}\n\n        <div>\n\n        </div>\n        <div>\n            {/* <Button onClick={()=> console.log(questionAnswer)}>click me</Button> */}\n            {questionAnswer.map(video => {\n               if (questionAnswer.indexOf(video) % 2 === 0) {return (\n                // <div><video  controls src={video.link}></video></div>\n                <Accordion >\n                <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography>Question {(questionAnswer.indexOf(video)/2 +1)}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography>\n              <div>\n                 <video src={video.link} controls   width={600}/>\n                 <video src={questionAnswer[questionAnswer.indexOf(video) +1].link} controls width={600}/>\n              </div>\n              </Typography>\n            </AccordionDetails>\n                </Accordion>\n                )}\n            })}\n        </div>\n        </>\n\n       \n    )\n}\nexport default ViewInterview ","import { Button } from '@mui/material';\nimport Input from '@mui/material/Input';\nimport {useState} from 'react'\nimport { useHistory } from 'react-router-dom'\n\n\nfunction UserHome({user}){\n    const [interviewCode, setInterviewCode] = useState('')\n    let history = useHistory()\n\n    return (\n        <div>\n           <p>Welcome {user.name}!</p> \n           <p>Please enter code below to go to an interview! </p>\n           <div>\n           <Input placeholder='Interview Code' value={interviewCode} onChange={(e)=> setInterviewCode(e.target.value)}/>\n            <Button onClick={()=> {\n                history.push(`/interview/${interviewCode}`)\n            }}>Let's go</Button>\n           </div>\n            \n        </div>\n    )\n}\nexport default UserHome","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AppsIcon from '@mui/icons-material/Apps';\n\n\nfunction NavDrawer({state, setState, toggleDrawer, logoutFunc, user}){\n     let history = useHistory()\n    \n      const list = (anchor) => (\n        <Box\n          sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n          role=\"presentation\"\n          onClick={toggleDrawer(anchor, false)}\n          onKeyDown={toggleDrawer(anchor, false)}\n        >\n          <List>\n\n          <ListItem button key={'Log Out'} onClick={logoutFunc}>\n                <ListItemIcon>\n                  { <LogoutIcon />}\n                </ListItemIcon>\n                <ListItemText primary={'Log Out'} />\n              </ListItem>\n\n            \n            <ListItem button key={'Home'} onClick={()=> {\n                history.push('/')\n            }}>\n                <ListItemIcon>\n                  { <HomeIcon />}\n                </ListItemIcon>\n                <ListItemText primary={'Home'} />\n              </ListItem>\n\n\n              \n              {!user.is_company && <ListItem button key={'Job Postings'} onClick={()=> {\n                history.push('/jobpostings')\n            }}>\n                <ListItemIcon>\n                  { <AppsIcon />}\n                </ListItemIcon>\n                <ListItemText primary={'View Job Postings'} />\n              </ListItem>}\n              \n              \n            {/* {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))} */}\n          </List>\n        </Box>\n      );\n    \n    return(\n        <div>\n        {['left', 'right', 'top', 'bottom'].map((anchor) => (\n          <React.Fragment key={anchor}>\n            \n            <Drawer\n              anchor={anchor}\n              open={state[anchor]}\n              onClose={toggleDrawer(anchor, false)}\n            >\n              {list(anchor)}\n            </Drawer>\n          </React.Fragment>\n        ))}\n      </div>\n  \n    )\n}\n\nexport default NavDrawer","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport Switch from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormGroup from '@mui/material/FormGroup';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/material/Menu';\nimport NavDrawer from './NavDrawer'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\n\nfunction NavBar({logoutFunc, user}){\n\n    let history = useHistory()\n\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n      });\n    \n      const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n          return;\n        }\n    \n        setState({ ...state, [anchor]: open });\n      };\n\n    const [auth, setAuth] = React.useState(true);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n  \n    const handleChange = (event) => {\n      setAuth(event.target.checked);\n    };\n  \n    const handleMenu = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    return (\n        <>\n        <NavDrawer state={state} setState={setState} toggleDrawer={toggleDrawer} logoutFunc={logoutFunc} user={user}></NavDrawer>\n        <Box sx={{ flexGrow: 1 }}>\n        <FormGroup>\n          \n        </FormGroup>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n            >\n              <MenuIcon onClick={toggleDrawer('left', true)}/>\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1, cursor: 'pointer' }} onClick={()=> {\n                history.push('/')\n            }\n            }>\n              Interview Anywhere\n            </Typography>\n            {auth && (\n              <div>\n                \n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\n                  <MenuItem onClick={handleClose}>My account</MenuItem>\n                </Menu>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </Box>\n      </>\n    )\n}\n\nexport default NavBar","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport {useState, useEffect} from 'react'\n\nfunction ViewJobPostings(){\n\n    const [allJobs, setAllJobs] = useState([])\n\n    useEffect(()=> {\n            fetch(\"/api/jobs\").then(res => res.json()).then(data => setAllJobs(data))\n    }, [])\n\n  \n    \n    return (\n        <div        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(5, 1fr)\",\n          gridGap: \"2rem\",\n          margin: \"auto\",\n          width: \"90%\",\n        }}>\n          \n      \n  \n         \n\n\n\n         {\n             allJobs[0] && allJobs.map(job => {\n                 return <Card variant=\"outlined\" style={{margin: '2rem'}}>{ <React.Fragment>\n    <CardContent>\n      <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n        Job Posting\n      </Typography>\n      <Typography variant=\"h5\" component=\"div\">\n        {job.title}\n      </Typography>\n      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n        For {job.user.name}\n      </Typography>\n      <Typography variant=\"body2\">\n        Contact info: \n        <br />\n        {job.user.email}\n      </Typography>\n        <Typography variant=\"body2\">\n        {new Date (job.created_at).year\n        }\n      </Typography>\n\n    </CardContent>\n    <CardActions>\n    </CardActions>\n  </React.Fragment>}</Card>\n             })\n         }\n     \n        </div>\n\n        \n    )\n}\n\nexport default ViewJobPostings","\nimport { useEffect, useState } from \"react\";\nimport RecordView from \"./Components/RecordView\";\nimport SignUp from \"./Pages/SignUp\";\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport Login from \"./Pages/Login\";\nimport {Button} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom'\nimport CompanyHome from \"./Pages/CompanyHome\";\nimport CreateJob from './Pages/CreateJob';\nimport ViewJob from \"./Pages/ViewJob\";\nimport TakeInterview from './Pages/TakeInterview'\nimport ViewInterview from \"./Pages/ViewInterview\";\nimport UserHome from \"./Pages/UserHome\";\nimport NavBar from \"./Components/NavBar\";\nimport ViewJobPostings from \"./Pages/ViewJobPostings\"\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\n\n\nexport default function App() {\n  const [videos, setVideos] = useState([])\n  const [user, setUser] = useState('')\n  const [job, setJob] = useState('')\n  const [interview, setInterview] = useState('')\n  let history = useHistory()\n\n  const darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n    \n  },\n});\n\n\n  useEffect(() => {\n    fetch('/api/videos').then(res => res.json()).then(data => setVideos(data))\n    //auto-login\n    fetch('/api/me').then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n\n  }, []);\n\n  \n  function logoutFunc() {\n    fetch('/api/logout', { method: 'DELETE' })\n    .then((data) => console.log(data));\n    setUser('')\n    history.push('/')\n}\n\n  if (!user) \n    return (\n      <div className=\"app\">\n        <Switch>\n            <Route exact path='/'>\n                  \n            <SignUp user={user} setUser={setUser}/>\n            \n            \n            </Route>\n            <Route exact path='/login'>\n              <Login setUser={setUser} ></Login>\n            </Route>\n        </Switch>\n      </div>\n    )\n\n  if (user.is_company) return (  \n    <Switch>\n      <Route exact path='/'>\n        <div className=\"app\">\n        <ThemeProvider theme={darkTheme}>\n          <NavBar logoutFunc={logoutFunc} user={user}/>\n          </ThemeProvider>\n        \n        <CompanyHome user={user} setJob={setJob} setInterview={setInterview}/>\n        \n        </div>\n      </Route>\n\n      <Route exact path='/create'>\n        <NavBar logoutFunc={logoutFunc} user={user}/>\n\n        <CreateJob user={user} job={job} setJob={setJob}/>\n      </Route>\n\n      <Route exact path='/create/:createdJob'>\n         <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewJob job={job} setJob={setJob} adding={true}/>\n      </Route>\n\n      <Route exact path='/:job'>\n         <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewJob job={job} setJob={setJob} adding={false} interview={interview} setInterview={setInterview}/>\n      </Route>\n      \n      <Route exact path='/interview/:interviewId'>\n       <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewInterview user={user} interview={interview} setInterview={setInterview}/>\n      </Route>\n    </Switch>\n \n\n    )\n  if (!user.is_company) return (\n    <Switch>\n      <Route exact path='/'>\n      <ThemeProvider theme={darkTheme}>\n          <NavBar logoutFunc={logoutFunc} user={user}/>\n          </ThemeProvider>\n      <div className=\"app\">\n      <UserHome user={user}/>\n     {videos[0] && videos.map((video)=>{\n      return <div key={video.id}> <video  src={video.url} controls width={800} /> <p>{video.duration}</p></div>\n     })}\n    </div>\n      </Route>\n      \n      <Route exact path='/interview/:jobId'>\n        <NavBar logoutFunc={logoutFunc} user={user}/>\n        <TakeInterview user={user}/>\n      </Route>\n\n      <Route exact path='/jobpostings'>\n        <NavBar logoutFunc={logoutFunc} user={user}/>\n        <ViewJobPostings/>\n      </Route>\n\n    </Switch>\n\n  )\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n<BrowserRouter>\n  <App />\n</BrowserRouter>,\n  \n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}